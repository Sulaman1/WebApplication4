
@{
    ViewData["Title"] = "PieOfPie";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="border border-primary d-flex justify-content-start">
    <div class="border border-primary" style="width:50%; margin-top:-200px;">

        <h5>PieOfPie</h5>

        <!-- Styles -->
        <style>
            #chartdiv {
                width: 180%;
                height: 1300px;
            }
        </style>

        <!-- Resources -->
        <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
        <script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
        <script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>

        <!-- Chart code -->
        <script>
            am5.ready(function () {


                // Create root element
                // https://www.amcharts.com/docs/v5/getting-started/#Root_element
                var root = am5.Root.new("chartdiv");

                // Set themes
                // https://www.amcharts.com/docs/v5/concepts/themes/
                root.setThemes([am5themes_Animated.new(root)]);

                var container = root.container.children.push(
                    am5.Container.new(root, {
                        width: am5.p50,
                        height: am5.p50,
                        layout: root.horizontalLayout
                    })
                );

                // Create main chart
                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                var chart = container.children.push(
                    am5percent.PieChart.new(root, {
                        tooltip: am5.Tooltip.new(root, {})
                    })
                );

                // Create series
                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                var series = chart.series.push(
                    am5percent.PieSeries.new(root, {
                        valueField: "value",
                        categoryField: "category",
                        alignLabels: false
                    })
                );

                //series.labels.template.setAll({
                //    textType: "circular",
                //    radius: 4
                //});

                series.labels.template.setAll({
                    fontSize: 10,
                    textType: "radial",
                    inside: true,
                    centerX: am5.percent(90),
                    radius: 10,
                    fill: am5.color(0xffffff)
                })

                series.ticks.template.set("visible", false);
                series.slices.template.set("toggleKey", "none");

                // add events
                series.slices.template.events.on("click", function (e) {
                    selectSlice(e.target);
                });

                // Create sub chart
                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                var subChart = container.children.push(
                    am5percent.PieChart.new(root, {
                        radius: am5.percent(50),
                        tooltip: am5.Tooltip.new(root, {})
                    })
                );

                // Create sub series
                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                var subSeries = subChart.series.push(
                    am5percent.PieSeries.new(root, {
                        valueField: "value",
                        categoryField: "category"
                    })
                );

                subSeries.data.setAll([
                    { category: "A", value: 0 },
                    { category: "B", value: 0 },
                    { category: "C", value: 0 },
                    { category: "D", value: 0 },
                    { category: "E", value: 0 },
                    { category: "F", value: 0 },
                    { category: "G", value: 0 }
                ]);
                subSeries.slices.template.set("toggleKey", "none");

                var selectedSlice;

                series.on("startAngle", function () {
                    updateLines();
                });

                container.events.on("boundschanged", function () {
                    root.events.on("frameended", function () {
                        updateLines();
                    })
                })

                function updateLines() {
                    if (selectedSlice) {
                        var startAngle = selectedSlice.get("startAngle");
                        var arc = selectedSlice.get("arc");
                        var radius = selectedSlice.get("radius");

                        var x00 = radius * am5.math.cos(startAngle);
                        var y00 = radius * am5.math.sin(startAngle);

                        var x10 = radius * am5.math.cos(startAngle + arc);
                        var y10 = radius * am5.math.sin(startAngle + arc);

                        var subRadius = subSeries.slices.getIndex(0).get("radius");
                        var x01 = 0;
                        var y01 = -subRadius;

                        var x11 = 0;
                        var y11 = subRadius;

                        var point00 = series.toGlobal({ x: x00, y: y00 });
                        var point10 = series.toGlobal({ x: x10, y: y10 });

                        var point01 = subSeries.toGlobal({ x: x01, y: y01 });
                        var point11 = subSeries.toGlobal({ x: x11, y: y11 });

                        line0.set("points", [point00, point01]);
                        line1.set("points", [point10, point11]);
                    }
                }

                // lines
                var line0 = container.children.push(
                    am5.Line.new(root, {
                        position: "absolute",
                        stroke: root.interfaceColors.get("text"),
                        strokeDasharray: [2, 2]
                    })
                );
                var line1 = container.children.push(
                    am5.Line.new(root, {
                        position: "absolute",
                        stroke: root.interfaceColors.get("text"),
                        strokeDasharray: [2, 2]
                    })
                );

                // Set data
                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data
                series.data.setAll([
                    {
                        category: "Lithuania",
                        value: 500,
                        subData: [
                            { category: "A", value: 200 },
                            { category: "B", value: 150 },
                            { category: "C", value: 100 },
                            { category: "D", value: 100 }
                        ]
                    },
                    {
                        category: "Czechia",
                        value: 300,
                        subData: [
                            { category: "A", value: 150 }
                        ]
                    },
                    {
                        category: "Ireland",
                        value: 200,
                        subData: [
                            { category: "A", value: 110 },
                            { category: "B", value: 60 },
                            { category: "C", value: 30 }
                        ]
                    },
                    {
                        category: "Germany",
                        value: 150,
                        subData: [
                            { category: "A", value: 80 },
                            { category: "B", value: 40 },
                            { category: "C", value: 30 }
                        ]
                    },
                    {
                        category: "Australia",
                        value: 140,
                        subData: [
                            { category: "A", value: 90 },
                            { category: "B", value: 40 },
                            { category: "C", value: 10 }
                        ]
                    },
                    {
                        category: "Austria",
                        value: 120,
                        subData: [
                            { category: "A", value: 60 },
                            { category: "B", value: 30 },
                            { category: "C", value: 30 }
                        ]
                    }
                ]);


                function selectSlice(slice) {
                    selectedSlice = slice;
                    var dataItem = slice.dataItem;
                    var dataContext = dataItem.dataContext;

                    if (dataContext) {
                        var i = 0;
                        subSeries.data.each(function (dataObject) {
                            var dataObj = dataContext.subData[i];
                            if (dataObj) {
                                subSeries.data.setIndex(i, dataObj);
                                if (!subSeries.dataItems[i].get("visible")) {
                                    subSeries.dataItems[i].show();
                                }
                            }
                            else {
                                subSeries.dataItems[i].hide();
                            }

                            i++;
                        });
                    }

                    var middleAngle = slice.get("startAngle") + slice.get("arc") / 2;
                    var firstAngle = series.dataItems[0].get("slice").get("startAngle");

                    series.animate({
                        key: "startAngle",
                        to: firstAngle - middleAngle,
                        duration: 1000,
                        easing: am5.ease.out(am5.ease.cubic)
                    });
                    series.animate({
                        key: "endAngle",
                        to: firstAngle - middleAngle + 360,
                        duration: 1000,
                        easing: am5.ease.out(am5.ease.cubic)
                    });
                }

                container.appear(1000, 10);

                series.events.on("datavalidated", function () {
                    selectSlice(series.slices.getIndex(0));
                });

            }); // end am5.ready()
        </script>

        <!-- HTML -->
        <div id="chartdiv"></div>

    </div>
   
    
    
@*    <div class="border border-dark" style="width:50%; border-top:100px; height:200%;">
            <!-- Styles -->
        <style>
        #chartdiv3 {
          width: 100%;
          height: 300px;
        }
        </style>

        <!-- Resources -->
        <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
        <script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
        <script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>

        <!-- Chart code -->
        <script>
        am5.ready(function() {

        // Create root element
        // https://www.amcharts.com/docs/v5/getting-started/#Root_element
        var root = am5.Root.new("chartdiv3");

        // Set themes
        // https://www.amcharts.com/docs/v5/concepts/themes/
        root.setThemes([
          am5themes_Animated.new(root)
        ]);

        // Create chart
        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
        // start and end angle must be set both for chart and series
        var chart = root.container.children.push(am5percent.PieChart.new(root, {
          layout: root.verticalLayout,
          radius: am5.percent(100)
        }));

        // Create series
        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
        // start and end angle must be set both for chart and series
        var series0 = chart.series.push(am5percent.PieSeries.new(root, {
          valueField: "population",
          categoryField: "year",
          alignLabels: false,
          radius: am5.percent(80),
          innerRadius: am5.percent(25)
        }));

        var bgColor = root.interfaceColors.get("background");

        series0.ticks.template.setAll({ forceHidden: true });

        series0.labels.template.setAll({
          radius: -10,
          text: "{category}",
          textType: "radial",
          centerX: am5.percent(100)
        });

        series0.slices.template.setAll({
          stroke: bgColor,
          strokeWidth: 2,
          fill: am5.color(0xaaaaaa),
          tooltipText:
            "{category}: {valuePercentTotal.formatNumber('0.00')}% ({value} bottles)"
        });
        series0.slices.template.states.create("hover", { scale: 0.95 });

        var series1 = chart.series.push(am5percent.PieSeries.new(root, {
          valueField: "population",
          categoryField: "country",
          alignLabels: true,
          innerRadius: am5.percent(80),
          radius: am5.percent(100)
        }));

        series1.slices.template.setAll({
          stroke: bgColor,
          strokeWidth: 2,
          templateField: "settings"
        });

        series1.labels.template.setAll({
          text: "{category}"
        });

        var data = {
          "1957": [
            { country: "Belgium", population: 11589623, settings: { fill: am5.color(0x1E3888) } },
            { country: "France", population: 67413000, settings: { fill: am5.color(0xaaaaaa) } },
            { country: "Germany", population: 83190556, settings: { fill: am5.color(0x9C3848) } },
            { country: "Italy", population: 60359546, settings: { fill: am5.color(0xaaaaaa) } },
            { country: "Luxembourg", population: 626108, settings: { fill: am5.color(0xaaaaaa) } },
            { country: "Netherlands", population: 17479000, settings: { fill: am5.color(0xaaaaaa) } }
          ],
          "1973": [
            { country: "Denmark", population: 5806081, settings: { fill: am5.color(0x1E3888) } },
            { country: "Ireland", population: 4948200, settings: { fill: am5.color(0xaaaaaa) } },
            { country: "United Kingdom", population: 66647112, settings: { fill: am5.color(0x47A8BD) } }
          ],
          "1981": [
            { country: "Greece", population: 10724599, settings: { fill: am5.color(0x1E3888) } }
          ],
          "1986": [
            { country: "Portugal", population: 10196707, settings: { fill: am5.color(0x1E3888) } },
            { country: "Spain", population: 46722980, settings: { fill: am5.color(0x1E3888) } }
          ],
          "1995": [
            { country: "Austria", population: 8902600, settings: { fill: am5.color(0x1E3888) } },
            { country: "Finland", population: 5523231, settings: { fill: am5.color(0x47A8BD) } },
            { country: "Sweden", population: 10379295, settings: { fill: am5.color(0x1E3888) } }
          ],
          "2004": [
            { country: "Cyprus", population: 1207359, settings: { fill: am5.color(0x1E3888) } },
            { country: "Czech Republic", population: 10708981, settings: { fill: am5.color(0x1E3888) } },
            { country: "Estonia", population: 1328976, settings: { fill: am5.color(0xaaaaaa) } },
            { country: "Hungary", population: 9771000, settings: { fill: am5.color(0xaaaaaa) } },
            { country: "Latvia", population: 1901548, settings: { fill: am5.color(0x47A8BD) } },
            { country: "Lithuania", population: 2790844, settings: { fill: am5.color(0xaaaaaa) } },
            { country: "Malta", population: 514564, settings: { fill: am5.color(0xaaaaaa) } },
            { country: "Poland", population: 37846755, settings: { fill: am5.color(0x1E3888) } },
            { country: "Slovakia", population: 5459642, settings: { fill: am5.color(0x47A8BD) } },
            { country: "Slovenia", population: 2073894, settings: { fill: am5.color(0xaaaaaa) } }
          ],
          "2007": [
            { country: "Bulgaria", population: 6971487, settings: { fill: am5.color(0x1E3888) } },
            { country: "Romania", population: 19286123, settings: { fill: am5.color(0x9C3848) } }
          ]
        };

        // Generate series data
        var innerData = [];
        var outerData = [];
        am5.object.each(data, function(year, countries) {
          var population = 0;
          am5.array.each(countries, function(country) {
            population += country.population;
            outerData.push(country);
          });
          innerData.push({
            year: year,
            population: population
          });
        });


        // Set data
        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data
        series0.data.setAll(innerData);
        series1.data.setAll(outerData);

        // Play initial series animation
        // https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series
        series0.appear(1000, 100);
        series1.appear(1000, 100);

        }); // end am5.ready()
        </script>

        <!-- HTML -->
        <div id="chartdiv3"></div>
    </div>

*@
</div>









@*

<h1>PieOfPie</h1>

<!-- Styles -->
<style>
    #chartdiv2 {
        width: 100%;
        height: 500px;
    }
</style>

<!-- Resources -->
<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>

<!-- Chart code -->
<script>
    am5.ready(function () {
    var view = 0;

        // Create root element
        // https://www.amcharts.com/docs/v5/getting-started/#Root_element
        var root = am5.Root.new("chartdiv2");

        // Set themes
        // https://www.amcharts.com/docs/v5/concepts/themes/
        root.setThemes([am5themes_Animated.new(root)]);

        var container = root.container.children.push(
            am5.Container.new(root, {
                width: am5.p50,
                height: am5.p50,
                layout: root.horizontalLayout
            })
        );

        // Create main chart
        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
        var chart = container.children.push(
            am5percent.PieChart.new(root, {
                tooltip: am5.Tooltip.new(root, {})
            })
        );

        // Create series
        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
        var series = chart.series.push(
            am5percent.PieSeries.new(root, {
                valueField: "value",
                categoryField: "category",
                alignLabels: false
            })
        );

        series.labels.template.setAll({
            fontSize: 10,
            textType: "circular",
            radius: 4
        });

        series.ticks.template.set("visible", false);
        series.slices.template.set("toggleKey", "none");

        // add events
        series.slices.template.events.on("click", function (e) {
            selectSlice(e.target);
            view = 1;
        });


        // Create sub chart
        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
        var subChart = container.children.push(
            am5percent.PieChart.new(root, {
                radius: am5.percent(50),
                tooltip: am5.Tooltip.new(root, {})
            })
        );

        // Create sub series
        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
        var subSeries = subChart.series.push(
            am5percent.PieSeries.new(root, {
                valueField: "value",
                categoryField: "category"
            })
        );

        subSeries.data.setAll([
            { category: "A", value: 0 },
            { category: "B", value: 0 },
            { category: "C", value: 0 },
            { category: "D", value: 0 },
            { category: "E", value: 0 },
            { category: "F", value: 0 },
            { category: "G", value: 0 }
        ]);
        subSeries.slices.template.set("toggleKey", "none");

        var selectedSlice;

        series.on("startAngle", function () {
            updateLines();
        });

        container.events.on("boundschanged", function () {
            root.events.on("frameended", function () {
                updateLines();
            })
        })

        function updateLines() {
            if (selectedSlice) {
                var startAngle = selectedSlice.get("startAngle");
                var arc = selectedSlice.get("arc");
                var radius = selectedSlice.get("radius");

                var x00 = radius * am5.math.cos(startAngle);
                var y00 = radius * am5.math.sin(startAngle);

                var x10 = radius * am5.math.cos(startAngle + arc);
                var y10 = radius * am5.math.sin(startAngle + arc);

                var subRadius = subSeries.slices.getIndex(0).get("radius");
                var x01 = 0;
                var y01 = -subRadius;

                var x11 = 0;
                var y11 = subRadius;

                var point00 = series.toGlobal({ x: x00, y: y00 });
                var point10 = series.toGlobal({ x: x10, y: y10 });

                var point01 = subSeries.toGlobal({ x: x01, y: y01 });
                var point11 = subSeries.toGlobal({ x: x11, y: y11 });

                line0.set("points", [point00, point01]);
                line1.set("points", [point10, point11]);
            }
        }

        // lines
        var line0 = container.children.push(
            am5.Line.new(root, {
                position: "absolute",
                stroke: root.interfaceColors.get("text"),
                strokeDasharray: [2, 2]
            })
        );
        var line1 = container.children.push(
            am5.Line.new(root, {
                position: "absolute",
                stroke: root.interfaceColors.get("text"),
                strokeDasharray: [2, 2]
            })
        );

        // Set data
        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data
        series.data.setAll([
            {
                category: "Lithuania",
                value: 500,
                subData: [
                    { category: "A", value: 200 },
                    { category: "B", value: 150 },
                    { category: "C", value: 100 },
                    { category: "D", value: 100 }
                ]
            },
            {
                category: "Czechia",
                value: 300,
                subData: [
                    { category: "A", value: 150 }
                ]
            },
            {
                category: "Ireland",
                value: 200,
                subData: [
                    { category: "A", value: 110 },
                    { category: "B", value: 60 },
                    { category: "C", value: 30 }
                ]
            },
            {
                category: "Germany",
                value: 150,
                subData: [
                    { category: "A", value: 80 },
                    { category: "B", value: 40 },
                    { category: "C", value: 30 }
                ]
            },
            {
                category: "Australia",
                value: 140,
                subData: [
                    { category: "A", value: 90 },
                    { category: "B", value: 40 },
                    { category: "C", value: 10 }
                ]
            },
            {
                category: "Austria",
                value: 120,
                subData: [
                    { category: "A", value: 60 },
                    { category: "B", value: 30 },
                    { category: "C", value: 30 }
                ]
            }
        ]);

        function selectSlice(slice) {
            selectedSlice = slice;
            var dataItem = slice.dataItem;
            var dataContext = dataItem.dataContext;

            if (dataContext) {
                var i = 0;
                subSeries.data.each(function (dataObject) {
                    var dataObj = dataContext.subData[i];
                    if (dataObj) {
                        subSeries.data.setIndex(i, dataObj);
                        if (!subSeries.dataItems[i].get("visible")) {
                            subSeries.dataItems[i].show();
                        }
                    }
                    else {
                        subSeries.dataItems[i].hide();
                    }

                    i++;
                });
            }

            var middleAngle = slice.get("startAngle") + slice.get("arc") / 2;
            var firstAngle = series.dataItems[0].get("slice").get("startAngle");

            series.animate({
                key: "startAngle",
                to: firstAngle - middleAngle,
                duration: 1000,
                easing: am5.ease.out(am5.ease.cubic)
            });
            series.animate({
                key: "endAngle",
                to: firstAngle - middleAngle + 360,
                duration: 1000,
                easing: am5.ease.out(am5.ease.cubic)
            });
        }

        container.appear(1000, 10);

        series.events.on("datavalidated", function () {
            selectSlice(series.slices.getIndex(0));
        });

        if(view == 0){
            subChart.hide();
            line0.hide();
            line1.hide();
        }
        if(view == 1){
            subChart.show();
            line0.show();
            line1.show();
        }

    }); // end am5.ready()
    
</script>

<!-- HTML -->
<div id="chartdiv2"></div>

*@