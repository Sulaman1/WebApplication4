

<div class="row row-cols-2">
    <div class="border border-primary col">
        <!-- Styles -->
        <style>
            #chartdiv3 {
                width: 100%;
                height: 300px;
            }
        </style>

        <!-- Chart code -->
        <script>
            am5.ready(function () {

                // Create root element
                // https://www.amcharts.com/docs/v5/getting-started/#Root_element
                var root = am5.Root.new("chartdiv3");

                // Set themes
                // https://www.amcharts.com/docs/v5/concepts/themes/
                root.setThemes([
                    am5themes_Animated.new(root)
                ]);

                // Create chart
                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                // start and end angle must be set both for chart and series
                var chart = root.container.children.push(am5percent.PieChart.new(root, {
                    layout: root.verticalLayout,
                    radius: am5.percent(100)
                }));

                // Create series
                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                // start and end angle must be set both for chart and series
                var series0 = chart.series.push(am5percent.PieSeries.new(root, {
                    valueField: "population", //population
                    categoryField: "year", //year
                    alignLabels: false,
                    radius: am5.percent(80),
                    innerRadius: am5.percent(25)
                }));

                var bgColor = root.interfaceColors.get("background");

                series0.ticks.template.setAll({ forceHidden: true });

                series0.labels.template.setAll({
                    radius: -10,
                    text: "{category}",
                    textType: "radial",
                    centerX: am5.percent(100)
                });

                series0.slices.template.setAll({
                    stroke: bgColor,
                    strokeWidth: 2,
                    fill: am5.color(0xaaaaaa),
                    tooltipText:
                        "{category}: {valuePercentTotal.formatNumber('0.00')}% ({value} bottles)"
                });
                series0.slices.template.states.create("hover", { scale: 0.95 });

                var series1 = chart.series.push(am5percent.PieSeries.new(root, {
                    valueField: "population", //population
                    categoryField: "country", //country
                    alignLabels: false,
                    innerRadius: am5.percent(80),
                    radius: am5.percent(100)
                }));

                series1.slices.template.setAll({
                    stroke: bgColor,
                    strokeWidth: 2,
                    templateField: "settings"
                });

                series1.labels.template.setAll({
                    text: "{category}"
                });

                //var data = {
                //    "2019":[
                //    { district: "Killa Abdullah", beneficiaries: 387, settings: { fill: am5.color(0x1E3888) } },
                //    { district: "Killa Saifullah", beneficiaries: 134, settings: { fill: am5.color(0xaaaaaa) } },
                //    { district: "Sherani", beneficiaries: 37, settings: { fill: am5.color(0x9C3848) } },

                //    ],
                //    "2020":[

                //    { district: "Chagai", beneficiaries: 83, settings: { fill: am5.color(0x1E3888) } },
                //    { district: "Nushki", beneficiaries: 407, settings: { fill: am5.color(0x1E3888) } },

                //],
                //"2021": [


                //    { district: "Pishin", beneficiaries: 127, settings: { fill: am5.color(0x1E3888) } },

                //],
                //"2022": [

                //    { district: "Zhob", beneficiaries: 117, settings: { fill: am5.color(0x1E3888) } },
                //    { district: "Mastung", beneficiaries: 187, settings: { fill: am5.color(0x1E3888) } },
                //    { district: "Quetta", beneficiaries: 332, settings: { fill: am5.color(0x1E3888) } },
                //],
                //};

                var data = {
                    "1957": [
                        { country: "Belgium", population: 11589623, settings: { fill: am5.color(0x1E3888) } },
                        { country: "France", population: 67413000, settings: { fill: am5.color(0xaaaaaa) } },
                        { country: "Germany", population: 83190556, settings: { fill: am5.color(0x9C3848) } },
                        { country: "Italy", population: 60359546, settings: { fill: am5.color(0xaaaaaa) } },
                        { country: "Luxembourg", population: 626108, settings: { fill: am5.color(0xaaaaaa) } },
                        { country: "Netherlands", population: 17479000, settings: { fill: am5.color(0xaaaaaa) } }
                    ],
                    "1973": [
                        { country: "Denmark", population: 5806081, settings: { fill: am5.color(0x1E3888) } },
                        { country: "Ireland", population: 4948200, settings: { fill: am5.color(0xaaaaaa) } },
                        { country: "United Kingdom", population: 66647112, settings: { fill: am5.color(0x47A8BD) } }
                    ],
                    "1981": [
                        { country: "Greece", population: 10724599, settings: { fill: am5.color(0x1E3888) } }
                    ],
                    "1986": [
                        { country: "Portugal", population: 10196707, settings: { fill: am5.color(0x1E3888) } },
                        { country: "Spain", population: 46722980, settings: { fill: am5.color(0x1E3888) } }
                    ],
                    "1995": [
                        { country: "Austria", population: 8902600, settings: { fill: am5.color(0x1E3888) } },
                        { country: "Finland", population: 5523231, settings: { fill: am5.color(0x47A8BD) } },
                        { country: "Sweden", population: 10379295, settings: { fill: am5.color(0x1E3888) } }
                    ],
                    "2004": [
                        { country: "Cyprus", population: 1207359, settings: { fill: am5.color(0x1E3888) } },
                        { country: "Czech Republic", population: 10708981, settings: { fill: am5.color(0x1E3888) } },
                        { country: "Estonia", population: 1328976, settings: { fill: am5.color(0xaaaaaa) } },
                        { country: "Hungary", population: 9771000, settings: { fill: am5.color(0xaaaaaa) } },
                        { country: "Latvia", population: 1901548, settings: { fill: am5.color(0x47A8BD) } },
                        { country: "Lithuania", population: 2790844, settings: { fill: am5.color(0xaaaaaa) } },
                        { country: "Malta", population: 514564, settings: { fill: am5.color(0xaaaaaa) } },
                        { country: "Poland", population: 37846755, settings: { fill: am5.color(0x1E3888) } },
                        { country: "Slovakia", population: 5459642, settings: { fill: am5.color(0x47A8BD) } },
                        { country: "Slovenia", population: 2073894, settings: { fill: am5.color(0xaaaaaa) } }
                    ],
                    "2007": [
                        { country: "Bulgaria", population: 6971487, settings: { fill: am5.color(0x1E3888) } },
                        { country: "Romania", population: 19286123, settings: { fill: am5.color(0x9C3848) } }
                    ]
                };

                // Generate series data
                var innerData = [];
                var outerData = [];
                am5.object.each(data, function (year, countries) {
                    var population = 0;
                    am5.array.each(countries, function (country) {
                        population += country.population;
                        outerData.push(country);
                    });
                    innerData.push({
                        year: year,
                        population: population
                    });
                });


                // Set data
                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data
                series0.data.setAll(innerData);
                series1.data.setAll(outerData);

                // Play initial series animation
                // https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series
                series0.appear(1000, 100);
                series1.appear(1000, 100);

            }); // end am5.ready()
        </script>

        <!-- HTML -->
        <div id="chartdiv3"></div>
    </div>

    <div class="border border-primary col">
        <div>
            <canvas id="barChart"></canvas>
        </div>

        <script>

            const barChart = document.getElementById('barChart');
            new Chart(barChart, {
                type: 'bar',
                data: {
                    labels: [
                        'Killa Abdullah',
                        'Killa Saifullah',
                        'Sherani',
                        'Chagai',
                        'Nushki',
                        'Pishin',
                        'Zhob',
                        'Mastung',
                        'Quetta'
                    ],
                    datasets: [{
                        label: '# of Beneficiaries',
                        data: [1255, 1948, 232, 2000, 648, 3584, 371, 600, 0],
                        borderWidth: 2
                    },
                    {
                        label: 'population',
                        data: [1255, 1948, 232, 2000, 648, 3584, 371, 600, 0],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

        </script>
    </div>

</div>

<div class="row row-cols-2">

    <div class="border border-dark col">
        <style>
            #myStakeChart {
                height: 200%;
                /* max-width: 100%;
                                margin: 20px auto;*/
            }

        </style>

        <canvas id="myStakeChart"></canvas>

        <script>
            var stakedata = {
                labels: ["January", "February", "March", "April", "May"],
                datasets: [
                    {
                        label: "Dataset 1",
                        data: [30, 40, 10, 50, 20],
                        backgroundColor: "rgba(75, 192, 192, 0.5)"
                    },
                    {
                        label: "Dataset 2",
                        data: [20, 10, 30, 40, 50],
                        backgroundColor: "rgba(255, 99, 132, 0.5)"
                    },
                    {
                        label: "Dataset 3",
                        data: [50, 20, 40, 30, 10],
                        backgroundColor: "rgba(54, 162, 235, 0.5)"
                    }
                ]
            };

            //var filteredData = JSON.parse(JSON.stringify(stakedata));

            // Chart options
            var stakeoptions = {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        stacked: true,
                    },
                    y: {
                        stacked: true,
                        beginAtZero: true
                    }
                }
            };

            // Create the chart
            var stakectx = document.getElementById("myStakeChart").getContext("2d");

            // Data for the chart
            var mystakeChart = new Chart(stakectx, {
                type: "bar",
                data: stakedata,
                options: stakeoptions
            });



                            //// Search functionality
                            //var searchInput2 = document.getElementById("searchInput2");
                            //searchInput2.addEventListener("input", function () {
                            //    var searchQuery = searchInput2.value.trim().toLowerCase();
                            //    filteredData.labels = originalData.labels.filter(function (label) {
                            //        return label.toLowerCase().includes(searchQuery);
                            //    });
                            //    filteredData.datasets = originalData.datasets.map(function (dataset) {
                            //        var filteredDataset = {
                            //            label: dataset.label,
                            //            backgroundColor: dataset.backgroundColor,
                            //            data: []
                            //        };
                            //        for (var i = 0; i < originalData.labels.length; i++) {
                            //            if (filteredData.labels.includes(originalData.labels[i])) {
                            //                filteredDataset.data.push(dataset.data[i]);
                            //            }
                            //        }
                            //        return filteredDataset;
                            //    });

                            //    mystakeChart.update();
                            //});


        </script>


        @*<div class="search-container">
        <input type="text" id="searchInput2" placeholder="Search by label">
        </div>*@
    </div>

</div>





<!-- Chart code -->
<script>

    var newData = []
    var root;
    var initializeData = (function () {
        var executed = false;
        console.log("one time")
        return function () {
            if (!executed) {
                executed = true;
                newData = [
                    {
                        category: "Afghan Refugee",
                        value: 49,
                        subData: [
                            { category: "LIP", value: 10 },
                            { category: "BSF", value: 10 },
                            { category: "TECH", value: 10 },
                            { category: "COMMUNITY TRAININGS", value: 10 }
                        ],
                        breakdown: [{
                            category: "Killa Abdullah",
                            value: 29
                        }, {
                            category: "Killa Saifullah",
                            value: 40
                        }, {
                            category: "Sherani",
                            value: 11
                        }, {
                            category: "Chagai",
                            value: 9
                        },
                        {
                            category: "Nushki",
                            value: 9
                        },
                        {
                            category: "Pishin",
                            value: 9
                        },
                        {
                            category: "Zhob",
                            value: 9
                        },
                        {
                            category: "Mastung",
                            value: 9
                        },
                        {
                            category: "Quetta",
                            value: 9
                        }]
                    },
                    {
                        category: "Female",
                        value: 30,
                        subData: [
                            { category: "LIP", value: 10 },
                            { category: "BSF", value: 10 },
                            { category: "TECH", value: 10 },
                            { category: "COMMUNITY TRAININGS", value: 10 }
                        ],
                        breakdown: [{
                            category: "Killa Abdullah",
                            value: 29
                        }, {
                            category: "Killa Saifullah",
                            value: 10
                        }, {
                            category: "Sherani",
                            value: 11
                        }, {
                            category: "Chagai",
                            value: 9
                        },
                        {
                            category: "Nushki",
                            value: 9
                        },
                        {
                            category: "Pishin",
                            value: 9
                        },
                        {
                            category: "Zhob",
                            value: 9
                        },
                        {
                            category: "Mastung",
                            value: 9
                        },
                        {
                            category: "Quetta",
                            value: 9
                        }]

                    }, {
                        category: "Male",
                        value: 21,
                        subData: [
                            { category: "LIP", value: 11 },
                            { category: "BSF", value: 10 },
                            { category: "TECH", value: 0 }
                        ],
                        breakdown: [{
                            category: "Killa Abdullah",
                            value: 29
                        }, {
                            category: "Killa Saifullah",
                            value: 40
                        }, {
                            category: "Sherani",
                            value: 11
                        }, {
                            category: "Chagai",
                            value: 9
                        },
                        {
                            category: "Nushki",
                            value: 9
                        },
                        {
                            category: "Pishin",
                            value: 9
                        },
                        {
                            category: "Zhob",
                            value: 9
                        },
                        {
                            category: "Mastung",
                            value: 9
                        },
                        {
                            category: "Quetta",
                            value: 9
                        }]
                    }
                ]

                am5.ready(function () {

                    console.log("In Show...", newData);

                    // Create root element
                    // https://www.amcharts.com/docs/v5/getting-started/#Root_element
                    root = am5.Root.new("chartdiv");

                    // Set themes
                    // https://www.amcharts.com/docs/v5/concepts/themes/
                    root.setThemes([am5themes_Animated.new(root)]);

                    var container = root.container.children.push(
                        am5.Container.new(root, {
                            width: am5.p100,
                            height: am5.p100,
                            //y: am5.percent(0),
                            //x: am5.percent(0),
                            layout: root.horizontalLayout
                        })
                    );


                    // ==============================================
                    // Column chart
                    // ==============================================


                    // Create chart
                    // https://www.amcharts.com/docs/v5/charts/xy-chart/
                    var achart = container.children.push(
                        am5xy.XYChart.new(root, {
                            // panY: false,
                            wheelY: "zoomX",
                            wheelX: "zoomY",
                            //layout: root.verticalLayout
                            width: am5.percent(100),
                            height: am5.percent(40),
                            panX: false,
                            panY: false,
                            //centerX: am5.percent(10),
                            y: am5.percent(50),
                            x: am5.percent(0),
                            layout: am5.GridLayout.new(root, {
                                maxColumns: 2,
                                fixedWidthGrid: true
                            })
                            //layout: root.verticalLayout
                        })
                    );

                    // Craete Y-axis
                    let yAxis = achart.yAxes.push(
                        am5xy.ValueAxis.new(root, {
                            renderer: am5xy.AxisRendererY.new(root, {
                            })
                        })
                    );

                    // Create X-Axis
                    var xAxis = achart.xAxes.push(
                        am5xy.CategoryAxis.new(root, {
                            maxDeviation: 0.2,
                            renderer: am5xy.AxisRendererX.new(root, {
                                minGridDistance: 10
                            }),
                            categoryField: "category"
                        })
                    );

                    //xAxis.data.setAll(adata);

                    // Create series
                    var aseries1 = achart.series.push(
                        am5xy.ColumnSeries.new(root, {
                            name: "Beneficiaries", //"Series"
                            xAxis: xAxis,
                            yAxis: yAxis,
                            valueYField: "value",
                            categoryXField: "category",
                            tooltip: am5.Tooltip.new(root, {})
                        })
                    );
                    aseries1.columns.template.setAll({
                        tooltipText: "{categoryX}: {valueY}"
                    });

                    var xRenderer = xAxis.get("renderer");
                    xRenderer.labels.template.setAll({
                        rotation: -15,
                        fontSize: 10,
                        centerY: am5.percent(50)
                    });

                    //aseries1.data.setAll(adata);

                    //var aseries2 = achart.series.push(
                    //    am5xy.ColumnSeries.new(root, {
                    //        name: "Series",
                    //        xAxis: xAxis,
                    //        yAxis: yAxis,
                    //        valueYField: "value",
                    //        categoryXField: "category"
                    //    })
                    //);
                    //aseries2.data.setAll(adata);

                    // Add legend
                    var alegend = achart.children.push(am5.Legend.new(root, {}));
                    alegend.data.setAll(achart.series.values);


                    // ==============================================
                    // END Column chart
                    // ==============================================

                    // Create main chart
                    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                    var chart = container.children.push(
                        am5percent.PieChart.new(root, {
                            tooltip: am5.Tooltip.new(root, {}),
                            radius: am5.percent(95),
                            // innerRadius: am5.percent(10)
                            // panY: false,
                            //wheelY: "zoomX",
                            //wheelX: "zoomY",
                            //layout: root.verticalLayout
                            width: am5.percent(70),
                            //height: am5.percent(30),
                            //panX: false,
                            //panY: false,

                            y: am5.percent(-23),
                            x: am5.percent(0),
                            layout: am5.GridLayout.new(root, {
                                maxColumns: 2,
                                fixedWidthGrid: true
                            })
                            //layout: root.verticalLayout
                        })
                    );

                    var series2 = chart.series.push(
                        am5percent.PieSeries.new(root, {
                            name: "Total",
                            valueField: "beneficiaries",
                            categoryField: "total"
                        })
                    );

                    series2.data.setAll([{
                        total: "Total",
                        beneficiaries: 60000
                    }]);

                    series2.bullets.push(function () {
                        return am5.Bullet.new(root, {
                            sprite: am5.Label.new(root, {
                                text: "{beneficiaries}",
                                centerX: am5.percent(50),
                                centerY: am5.percent(130),
                                populateText: true,
                                fill: am5.color(0xffffff)
                            })
                        });
                    });


                    // Configuring slices
                    series2.slices.template.setAll({
                        stroke: am5.color(0xffffff),
                        strokeWidth: 2
                    })

                    series2.labels.template.setAll({
                        // text: "{beneficiaries}",
                        //fontSize: 10,
                        textType: "circular",
                        //inside: true,
                        //centerX: am5.percent(90),
                        radius: 10,
                        fill: am5.color(0xffffff)
                    })


                    //series2.ticks.template.set("visible", false);
                    //series2.slices.template.set("toggleKey", "none");

                    //// Disabling labels and ticks
                    //series2.labels.template.set("visible", false);
                    //series2.ticks.template.set("visible", false);

                    // Create series
                    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                    var series = chart.series.push(
                        am5percent.PieSeries.new(root, {
                            valueField: "value",
                            categoryField: "category",
                            alignLabels: false,
                        })
                    );

                    //series.labels.template.setAll({
                    //    textType: "circular",
                    //    radius: 4
                    //});


                    series.labels.template.setAll({
                        text: "{category}[/]: [bold]{value}[/]",
                        fontSize: 10,
                        oversizedBehavior: "wrap",
                        textAlign: "center",
                        maxWidth: 70,
                        textType: "radial",
                        inside: true,
                        centerX: am5.percent(90),
                        radius: 10,
                        fill: am5.color(0xffffff)
                    })

                    series.ticks.template.set("visible", false);
                    series.slices.template.set("toggleKey", "none");

                    // add events
                    series.slices.template.events.on("click", function (e) {
                        console.log("Slice", e.target.get("fill"))
                        selectSlice(e.target);
                        aseries1.columns.template.setAll({
                            fill: e.target.get("fill"), //slice
                            stroke: e.target.get("fill") //slice
                        });

                        console.log(e.target.dataItem.dataContext.breakdown)

                        aseries1.data.setAll(e.target.dataItem.dataContext.breakdown);
                        // yAxis.data.setAll(e.target.dataItem.dataContext.breakdown);
                        xAxis.data.setAll(e.target.dataItem.dataContext.breakdown)
                        //currentSlice = e.target;
                    });


                    // Create sub chart
                    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                    var subChart = container.children.push(
                        am5percent.PieChart.new(root, {
                            radius: am5.percent(40),
                            tooltip: am5.Tooltip.new(root, {}),
                            // panY: false,
                            //wheelY: "zoomX",
                            //wheelX: "zoomY",
                            //layout: root.verticalLayout
                            //width: am5.percent(50),
                            //height: am5.percent(30),
                            //panX: false,
                            //panY: false,
                            //centerX: am5.percent(10),
                            y: am5.percent(-23),
                            x: am5.percent(20),
                            //layout: am5.GridLayout.new(root, {
                            //    maxColumns: 2,
                            //    fixedWidthGrid: true
                            //})
                            //layout: root.verticalLayout
                        })
                    );

                    // Create sub series
                    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                    var subSeries = subChart.series.push(
                        am5percent.PieSeries.new(root, {
                            valueField: "value",
                            categoryField: "category",
                            alignLabels: false
                        })
                    );

                    subSeries.labels.template.setAll({
                        text: "{category}[/]: [bold]{value}[/]",
                        fontSize: 10,
                        oversizedBehavior: "wrap",
                        textAlign: "center",
                        maxWidth: 70,
                        textType: "circular",
                        //inside: true,
                        //centerX: am5.percent(-40),
                        radius: 10,
                        fill: am5.color(0x000000)
                    })


                    subSeries.data.setAll([
                        { category: "A", value: 0 },
                        { category: "B", value: 0 },
                        { category: "C", value: 0 },
                        { category: "D", value: 0 },
                        { category: "E", value: 0 },
                        { category: "F", value: 0 },
                        { category: "G", value: 0 }
                    ]);
                    subSeries.slices.template.set("toggleKey", "none");

                    var selectedSlice;

                    series.on("startAngle", function () {
                        updateLines();
                    });

                    container.events.on("boundschanged", function () {
                        root.events.on("frameended", function () {
                            updateLines();
                        })
                    })

                    function updateLines() {
                        if (selectedSlice) {
                            var startAngle = selectedSlice.get("startAngle");
                            var arc = selectedSlice.get("arc");
                            var radius = selectedSlice.get("radius");

                            var x00 = radius * am5.math.cos(startAngle);
                            var y00 = radius * am5.math.sin(startAngle);

                            var x10 = radius * am5.math.cos(startAngle + arc);
                            var y10 = radius * am5.math.sin(startAngle + arc);

                            var subRadius = subSeries.slices.getIndex(0).get("radius");
                            var x01 = 0;
                            var y01 = -subRadius;

                            var x11 = 0;
                            var y11 = subRadius;

                            var point00 = series.toGlobal({ x: x00, y: y00 });
                            var point10 = series.toGlobal({ x: x10, y: y10 });

                            var point01 = subSeries.toGlobal({ x: x01, y: y01 });
                            var point11 = subSeries.toGlobal({ x: x11, y: y11 });

                            line0.set("points", [point00, point01]);
                            line1.set("points", [point10, point11]);
                        }
                    }

                    // lines
                    var line0 = container.children.push(
                        am5.Line.new(root, {
                            position: "absolute",
                            stroke: root.interfaceColors.get("text"),
                            strokeDasharray: [2, 2]
                        })
                    );
                    var line1 = container.children.push(
                        am5.Line.new(root, {
                            position: "absolute",
                            stroke: root.interfaceColors.get("text"),
                            strokeDasharray: [2, 2]
                        })
                    );

                    // Set data
                    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data
                    series.data.setAll(
                        newData
                    );

                    function selectSlice(slice) {
                        selectedSlice = slice;
                        var dataItem = slice.dataItem;
                        var dataContext = dataItem.dataContext;

                        if (dataContext) {
                            var i = 0;
                            subSeries.data.each(function (dataObject) {
                                var dataObj = dataContext.subData[i];
                                if (dataObj) {
                                    subSeries.data.setIndex(i, dataObj);
                                    if (!subSeries.dataItems[i].get("visible")) {
                                        subSeries.dataItems[i].show();
                                    }
                                }
                                else {
                                    subSeries.dataItems[i].hide();
                                }

                                i++;
                            });
                        }

                        var middleAngle = slice.get("startAngle") + slice.get("arc") / 2;
                        var firstAngle = series.dataItems[0].get("slice").get("startAngle");

                        series.animate({
                            key: "startAngle",
                            to: firstAngle - middleAngle,
                            duration: 1000,
                            easing: am5.ease.out(am5.ease.cubic)
                        });
                        series.animate({
                            key: "endAngle",
                            to: firstAngle - middleAngle + 360,
                            duration: 1000,
                            easing: am5.ease.out(am5.ease.cubic)
                        });
                    }

                    container.appear(1000, 10);

                    series.events.on("datavalidated", function () {
                        selectSlice(series.slices.getIndex(0));
                    });

                }); // end am5.ready()

            }
        };
    })();

    //It Will Initialize the data on Page Load and would never be called again...
    initializeData();

    function PDOI() {
        console.log("PDOI")
        refugee = 0;
        var pdoi = [
            {
                category: "Afghan Refugee",
                value: 20,
                subData: [
                    { category: "LIP", value: 10 },
                    { category: "BSF", value: 10 },
                    { category: "TECH", value: 10 },
                    { category: "COMMUNITY TRAININGS", value: 10 }
                ],
                breakdown: [{
                    category: "Killa Abdullah",
                    value: 29
                }, {
                    category: "Killa Saifullah",
                    value: 40
                }, {
                    category: "Sherani",
                    value: 11
                }, {
                    category: "Chagai",
                    value: 9
                },
                {
                    category: "Nushki",
                    value: 9
                },
                {
                    category: "Pishin",
                    value: 9
                },
                {
                    category: "Zhob",
                    value: 9
                },
                {
                    category: "Mastung",
                    value: 9
                },
                {
                    category: "Quetta",
                    value: 9
                }]
            },
            {
                category: "Female",
                value: 30,
                subData: [
                    { category: "LIP", value: 10 },
                    { category: "BSF", value: 10 },
                    { category: "TECH", value: 10 },
                    { category: "COMMUNITY TRAININGS", value: 10 }
                ],
                breakdown: [{
                    category: "Killa Abdullah",
                    value: 29
                }, {
                    category: "Killa Saifullah",
                    value: 10
                }, {
                    category: "Sherani",
                    value: 11
                }, {
                    category: "Chagai",
                    value: 9
                },
                {
                    category: "Nushki",
                    value: 9
                },
                {
                    category: "Pishin",
                    value: 9
                },
                {
                    category: "Zhob",
                    value: 9
                },
                {
                    category: "Mastung",
                    value: 9
                },
                {
                    category: "Quetta",
                    value: 9
                }]

            }, {
                category: "Male",
                value: 21,
                subData: [
                    { category: "LIP", value: 11 },
                    { category: "BSF", value: 10 },
                    { category: "TECH", value: 0 }
                ],
                breakdown: [{
                    category: "Killa Abdullah",
                    value: 29
                }, {
                    category: "Killa Saifullah",
                    value: 40
                }, {
                    category: "Sherani",
                    value: 11
                }, {
                    category: "Chagai",
                    value: 9
                },
                {
                    category: "Nushki",
                    value: 9
                },
                {
                    category: "Pishin",
                    value: 9
                },
                {
                    category: "Zhob",
                    value: 9
                },
                {
                    category: "Mastung",
                    value: 9
                },
                {
                    category: "Quetta",
                    value: 9
                }]
            }
        ]

        newData = pdoi

        root.dispose();
        rerender()
    }

    var refugee = 0;

    function REFUGEE() {
        console.log("Refugee")
        refugee = 1;
        var pdoi = [
            {
                category: "Afghan Refugee",
                value: 49,
                subData: [
                    { category: "Male", value: 10 },
                    { category: "Female", value: 10 }
                ],
                breakdown: [{
                    category: "Killa Abdullah",
                    value: 29
                }, {
                    category: "Killa Saifullah",
                    value: 40
                }, {
                    category: "Sherani",
                    value: 11
                }, {
                    category: "Chagai",
                    value: 9
                },
                {
                    category: "Nushki",
                    value: 9
                },
                {
                    category: "Pishin",
                    value: 9
                },
                {
                    category: "Zhob",
                    value: 9
                },
                {
                    category: "Mastung",
                    value: 9
                },
                {
                    category: "Quetta",
                    value: 9
                }]
            },
            {
                category: "Female",
                value: 30,
                subData: [
                    { category: "Male", value: 10 },
                    { category: "Female", value: 10 }
                ],
                //breakdown: [{
                //    category: "Killa Abdullah",
                //    value: 29
                //}, {
                //    category: "Killa Saifullah",
                //    value: 10
                //}, {
                //    category: "Sherani",
                //    value: 11
                //}, {
                //    category: "Chagai",
                //    value: 9
                //},
                //{
                //    category: "Nushki",
                //    value: 9
                //},
                //{
                //    category: "Pishin",
                //    value: 9
                //},
                //{
                //    category: "Zhob",
                //    value: 9
                //},
                //{
                //    category: "Mastung",
                //    value: 9
                //},
                //{
                //    category: "Quetta",
                //    value: 9
                //}]

            }, {
                category: "Male",
                value: 21,
                subData: [
                    { category: "Male", value: 10 },
                    { category: "Female", value: 10 }
                ],
                //breakdown: [{
                //    category: "Killa Abdullah",
                //    value: 29
                //}, {
                //    category: "Killa Saifullah",
                //    value: 40
                //}, {
                //    category: "Sherani",
                //    value: 11
                //}, {
                //    category: "Chagai",
                //    value: 9
                //},
                //{
                //    category: "Nushki",
                //    value: 9
                //},
                //{
                //    category: "Pishin",
                //    value: 9
                //},
                //{
                //    category: "Zhob",
                //    value: 9
                //},
                //{
                //    category: "Mastung",
                //    value: 9
                //},
                //{
                //    category: "Quetta",
                //    value: 9
                //}]

            }
        ]

        newData = pdoi

        root.dispose();
        rerender()
    }


    // Applying Filter/Search on the PieOfPie Chart

    console.log("Search Bar");
    const searchInput = document.getElementById('searchInput');

    // Add event listener to execute function on change
    searchInput.addEventListener('keyup', function (event) {
        const searchTerm = event.target.value;

        //var list = [
        //    {
        //        category: "Killa Abdullah",
        //        value: 1255,
        //        subData: [
        //            { category: "Male Beneficiary", value: 220 },
        //            { category: "Female Beneficiary", value: 735 },
        //            { category: "Male Refugee Beneficiary", value: 52 },
        //            { category: "Female Refugee Beneficiary", value: 248 }
        //        ]
        //    },
        //    {
        //        category: "Killa Saifullah",
        //        value: 1948,
        //        subData: [
        //            { category: "Male Beneficiary", value: 400 },
        //            { category: "Female Beneficiary", value: 948 },
        //            { category: "Male Refugee Beneficiary", value: 444 },
        //            { category: "Female Refugee Beneficiary", value: 156 }
        //        ]
        //    },
        //    {
        //        category: "Sherani",
        //        value: 232,
        //        subData: [
        //            { category: "Male Beneficiary", value: 49 },
        //            { category: "Female Beneficiary", value: 183 },
        //            { category: "Male Refugee Beneficiary", value: 0 },
        //            { category: "Female Refugee Beneficiary", value: 0 }
        //        ]
        //    },
        //    {
        //        category: "Chagai",
        //        value: 2000,
        //        subData: [
        //            { category: "Male Beneficiary", value: 213 },
        //            { category: "Female Beneficiary", value: 787 },
        //            { category: "Male Refugee Beneficiary", value: 787 },
        //            { category: "Female Refugee Beneficiary", value: 213 }
        //        ]
        //    },
        //    {
        //        category: "Nushki",
        //        value: 648,
        //        subData: [
        //            { category: "Male Beneficiary", value: 159 },
        //            { category: "Female Beneficiary", value: 237 },
        //            { category: "Male Refugee Beneficiary", value: 151 },
        //            { category: "Female Refugee Beneficiary", value: 101 }
        //        ]
        //    },
        //    {
        //        category: "Pishin",
        //        value: 3584,
        //        subData: [
        //            { category: "Male Beneficiary", value: 624 },
        //            { category: "Female Beneficiary", value: 1539 },
        //            { category: "Male Refugee Beneficiary", value: 1054 },
        //            { category: "Female Refugee Beneficiary", value: 367 }
        //        ]
        //    },
        //    {
        //        category: "Zhob",
        //        value: 371,
        //        subData: [
        //            { category: "Male Beneficiary", value: 153 },
        //            { category: "Female Beneficiary", value: 218 },
        //            { category: "Male Refugee Beneficiary", value: 0 },
        //            { category: "Female Refugee Beneficiary", value: 0 }
        //        ]
        //    },
        //    {
        //        category: "Mastung",
        //        value: 600,
        //        subData: [
        //            { category: "Male Beneficiary", value: 131 },
        //            { category: "Female Beneficiary", value: 169 },
        //            { category: "Male Refugee Beneficiary", value: 169 },
        //            { category: "Female Refugee Beneficiary", value: 131 }
        //        ]
        //    },
        //    {
        //        category: "Quetta",
        //        value: 0,
        //        subData: [
        //            { category: "Male Beneficiary", value: 0 },
        //            { category: "Female Beneficiary", value: 0 },
        //            { category: "Male Refugee Beneficiary", value: 0 },
        //            { category: "Female Refugee Beneficiary", value: 0 }
        //        ]
        //    }
        //];

        var list = [
            {
                category: "Afghan Refugee",
                value: 49,
                subData: [
                    { category: "LIP", value: 10 },
                    { category: "BSF", value: 10 },
                    { category: "TECH", value: 10 },
                    { category: "COMMUNITY TRAININGS", value: 10 }
                ],
                breakdown: [{
                    category: "Killa Abdullah",
                    value: 29
                }, {
                    category: "Killa Saifullah",
                    value: 40
                }, {
                    category: "Sherani",
                    value: 11
                }, {
                    category: "Chagai",
                    value: 9
                },
                {
                    category: "Nushki",
                    value: 9
                },
                {
                    category: "Pishin",
                    value: 9
                },
                {
                    category: "Zhob",
                    value: 9
                },
                {
                    category: "Mastung",
                    value: 9
                },
                {
                    category: "Quetta",
                    value: 9
                }]
            },
            {
                category: "Female",
                value: 30,
                subData: [
                    { category: "LIP", value: 10 },
                    { category: "BSF", value: 10 },
                    { category: "TECH", value: 10 },
                    { category: "COMMUNITY TRAININGS", value: 10 }
                ],
                breakdown: [{
                    category: "Killa Abdullah",
                    value: 29
                }, {
                    category: "Killa Saifullah",
                    value: 10
                }, {
                    category: "Sherani",
                    value: 11
                }, {
                    category: "Chagai",
                    value: 9
                },
                {
                    category: "Nushki",
                    value: 9
                },
                {
                    category: "Pishin",
                    value: 9
                },
                {
                    category: "Zhob",
                    value: 9
                },
                {
                    category: "Mastung",
                    value: 9
                },
                {
                    category: "Quetta",
                    value: 9
                }]

            }, {
                category: "Male",
                value: 21,
                subData: [
                    { category: "LIP", value: 11 },
                    { category: "BSF", value: 10 },
                    { category: "TECH", value: 0 }
                ],
                breakdown: [{
                    category: "Killa Abdullah",
                    value: 29
                }, {
                    category: "Killa Saifullah",
                    value: 40
                }, {
                    category: "Sherani",
                    value: 11
                }, {
                    category: "Chagai",
                    value: 9
                },
                {
                    category: "Nushki",
                    value: 9
                },
                {
                    category: "Pishin",
                    value: 9
                },
                {
                    category: "Zhob",
                    value: 9
                },
                {
                    category: "Mastung",
                    value: 9
                },
                {
                    category: "Quetta",
                    value: 9
                }]
            }
        ]


        const filteredList = list.filter(item => {

            const itemName = item.category.toLowerCase();
            const lowercasedSearchTerm = searchTerm.toLowerCase();
            return itemName.includes(lowercasedSearchTerm);
        });
        // Execute your search function or any desired action here
        console.log('Searching for:', filteredList);
        newData = filteredList
        root.dispose();
        rerender()
    });


    function rerender() {
        am5.ready(function () {

            console.log("In Show...", newData);

            // Create root element
            // https://www.amcharts.com/docs/v5/getting-started/#Root_element
            root = am5.Root.new("chartdiv");

            // Set themes
            // https://www.amcharts.com/docs/v5/concepts/themes/
            root.setThemes([am5themes_Animated.new(root)]);

            var container = root.container.children.push(
                am5.Container.new(root, {
                    width: am5.p100,
                    height: am5.p100,
                    //y: am5.percent(0),
                    //x: am5.percent(0),
                    layout: root.horizontalLayout
                })
            );


            // ==============================================
            // Column chart
            // ==============================================

            // Create chart
            // https://www.amcharts.com/docs/v5/charts/xy-chart/
            var achart = container.children.push(
                am5xy.XYChart.new(root, {
                    // panY: false,
                    wheelY: "zoomX",
                    wheelX: "zoomY",
                    //layout: root.verticalLayout
                    width: am5.percent(100),
                    height: am5.percent(40),
                    panX: false,
                    panY: false,
                    //centerX: am5.percent(10),
                    y: am5.percent(50),
                    x: am5.percent(0),
                    layout: am5.GridLayout.new(root, {
                        maxColumns: 2,
                        fixedWidthGrid: true
                    })
                    //layout: root.verticalLayout
                })
            );

            // Craete Y-axis
            let yAxis = achart.yAxes.push(
                am5xy.ValueAxis.new(root, {
                    renderer: am5xy.AxisRendererY.new(root, {
                    })
                })
            );

            // Create X-Axis
            var xAxis = achart.xAxes.push(
                am5xy.CategoryAxis.new(root, {
                    maxDeviation: 0.2,
                    renderer: am5xy.AxisRendererX.new(root, {
                        minGridDistance: 10
                    }),
                    categoryField: "category"
                })
            );

            //xAxis.data.setAll(adata);

            // Create series
            var aseries1 = achart.series.push(
                am5xy.ColumnSeries.new(root, {
                    name: "Beneficiaries", //"Series"
                    xAxis: xAxis,
                    yAxis: yAxis,
                    valueYField: "value",
                    categoryXField: "category",
                    tooltip: am5.Tooltip.new(root, {})
                })
            );
            aseries1.columns.template.setAll({
                tooltipText: "{categoryX}: {valueY}"
            });

            var xRenderer = xAxis.get("renderer");
            xRenderer.labels.template.setAll({
                rotation: -15,
                fontSize: 10,
                centerY: am5.percent(50)
            });

            //aseries1.data.setAll(adata);

            //var aseries2 = achart.series.push(
            //    am5xy.ColumnSeries.new(root, {
            //        name: "Series",
            //        xAxis: xAxis,
            //        yAxis: yAxis,
            //        valueYField: "value",
            //        categoryXField: "category"
            //    })
            //);
            //aseries2.data.setAll(adata);

            // Add legend
            var alegend = achart.children.push(am5.Legend.new(root, {}));
            alegend.data.setAll(achart.series.values);


            // ==============================================
            // Column chart
            // ==============================================

            // Create main chart
            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
            var chart = container.children.push(
                am5percent.PieChart.new(root, {
                    tooltip: am5.Tooltip.new(root, {}),
                    radius: am5.percent(95),
                    // innerRadius: am5.percent(10)
                    // panY: false,
                    //wheelY: "zoomX",
                    //wheelX: "zoomY",
                    //layout: root.verticalLayout
                    width: am5.percent(70),
                    //height: am5.percent(30),
                    //panX: false,
                    //panY: false,

                    y: am5.percent(-23),
                    x: am5.percent(0),
                    layout: am5.GridLayout.new(root, {
                        maxColumns: 2,
                        fixedWidthGrid: true
                    })
                    //layout: root.verticalLayout
                })
            );

            var series2 = chart.series.push(
                am5percent.PieSeries.new(root, {
                    name: "Total",
                    valueField: "beneficiaries",
                    categoryField: "total"
                })
            );

            series2.data.setAll([{
                total: "Total",
                beneficiaries: 60000
            }]);

            series2.bullets.push(function () {
                return am5.Bullet.new(root, {
                    sprite: am5.Label.new(root, {
                        text: "{beneficiaries}",
                        centerX: am5.percent(50),
                        centerY: am5.percent(130),
                        populateText: true,
                        fill: am5.color(0xffffff)
                    })
                });
            });


            // Configuring slices
            series2.slices.template.setAll({
                stroke: am5.color(0xffffff),
                strokeWidth: 2
            })

            series2.labels.template.setAll({
                // text: "{beneficiaries}",
                //fontSize: 10,
                textType: "circular",
                //inside: true,
                //centerX: am5.percent(90),
                radius: 10,
                fill: am5.color(0xffffff)
            })

            //series2.ticks.template.set("visible", false);
            //series2.slices.template.set("toggleKey", "none");

            //// Disabling labels and ticks
            //series2.labels.template.set("visible", false);
            //series2.ticks.template.set("visible", false);

            // Create series
            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
            var series = chart.series.push(
                am5percent.PieSeries.new(root, {
                    valueField: "value",
                    categoryField: "category",
                    alignLabels: false,
                })
            );

            //series.labels.template.setAll({
            //    textType: "circular",
            //    radius: 4
            //});


            series.labels.template.setAll({
                text: "{category}[/]: [bold]{value}[/]",
                fontSize: 10,
                oversizedBehavior: "wrap",
                textAlign: "center",
                maxWidth: 70,
                textType: "radial",
                inside: true,
                centerX: am5.percent(90),
                radius: 10,
                fill: am5.color(0xffffff)
            })

            series.ticks.template.set("visible", false);
            series.slices.template.set("toggleKey", "none");

            // add events
            series.slices.template.events.on("click", function (e) {
                console.log("Slice", e.target.get("fill"))
                selectSlice(e.target);
                aseries1.columns.template.setAll({
                    fill: e.target.get("fill"), //slice
                    stroke: e.target.get("fill") //slice
                });

                console.log(e.target.dataItem.dataContext.breakdown)

                aseries1.data.setAll(e.target.dataItem.dataContext.breakdown);
                // yAxis.data.setAll(e.target.dataItem.dataContext.breakdown);
                xAxis.data.setAll(e.target.dataItem.dataContext.breakdown)
                //currentSlice = e.target;
            });


            // Create sub chart
            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
            var subChart = container.children.push(
                am5percent.PieChart.new(root, {
                    radius: am5.percent(40),
                    tooltip: am5.Tooltip.new(root, {}),
                    // panY: false,
                    //wheelY: "zoomX",
                    //wheelX: "zoomY",
                    //layout: root.verticalLayout
                    //width: am5.percent(50),
                    //height: am5.percent(30),
                    //panX: false,
                    //panY: false,
                    //centerX: am5.percent(10),
                    y: am5.percent(-23),
                    x: am5.percent(20),
                    //layout: am5.GridLayout.new(root, {
                    //    maxColumns: 2,
                    //    fixedWidthGrid: true
                    //})
                    //layout: root.verticalLayout
                })
            );

            // Create sub series
            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
            var subSeries = subChart.series.push(
                am5percent.PieSeries.new(root, {
                    valueField: "value",
                    categoryField: "category",
                    alignLabels: false
                })
            );

            subSeries.labels.template.setAll({
                text: "{category}",
                fontSize: 10,
                oversizedBehavior: "wrap",
                textAlign: "center",
                maxWidth: 70,
                textType: "circular",
                //inside: true,
                //centerX: am5.percent(-40),
                radius: 10,
                fill: am5.color(0x000000)
            })


            subSeries.data.setAll([
                { category: "A", value: 0 },
                { category: "B", value: 0 },
                { category: "C", value: 0 },
                { category: "D", value: 0 },
                { category: "E", value: 0 },
                { category: "F", value: 0 },
                { category: "G", value: 0 }
            ]);
            subSeries.slices.template.set("toggleKey", "none");

            var selectedSlice;

            series.on("startAngle", function () {
                updateLines();
            });

            container.events.on("boundschanged", function () {
                root.events.on("frameended", function () {
                    updateLines();
                })
            })

            function updateLines() {
                if (selectedSlice) {
                    //console.log("SelectedSlice: ", selectedSlice);

                    var startAngle = selectedSlice.get("startAngle");
                    var arc = selectedSlice.get("arc");
                    var radius = selectedSlice.get("radius");

                    var x00 = radius * am5.math.cos(startAngle);
                    var y00 = radius * am5.math.sin(startAngle);

                    var x10 = radius * am5.math.cos(startAngle + arc);
                    var y10 = radius * am5.math.sin(startAngle + arc);

                    var subRadius = subSeries.slices.getIndex(0).get("radius");
                    var x01 = 0;
                    var y01 = -subRadius;

                    var x11 = 0;
                    var y11 = subRadius;

                    var point00 = series.toGlobal({ x: x00, y: y00 });
                    var point10 = series.toGlobal({ x: x10, y: y10 });

                    var point01 = subSeries.toGlobal({ x: x01, y: y01 });
                    var point11 = subSeries.toGlobal({ x: x11, y: y11 });

                    line0.set("points", [point00, point01]);
                    line1.set("points", [point10, point11]);
                }
            }

            // lines
            var line0 = container.children.push(
                am5.Line.new(root, {
                    position: "absolute",
                    stroke: root.interfaceColors.get("text"),
                    strokeDasharray: [2, 2]
                })
            );
            var line1 = container.children.push(
                am5.Line.new(root, {
                    position: "absolute",
                    stroke: root.interfaceColors.get("text"),
                    strokeDasharray: [2, 2]
                })
            );

            // Set data
            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data
            series.data.setAll(
                newData
            );

            function selectSlice(slice) {
                console.log("SelectedSlice 2: ", selectedSlice)
                selectedSlice = slice;

                var dataItem = slice.dataItem;
                var dataContext = dataItem.dataContext;
                var checkRefugee = JSON.stringify(dataContext["category"]);

                console.log(`
                                            Data Context: ${checkRefugee}
                                        `)

                if (!(refugee == 1 && (checkRefugee.toLowerCase().includes("male") || checkRefugee.toLowerCase().includes("female")))) {
                    console.log("in")
                }


                if (dataContext) {
                    var i = 0;

                    subSeries.data.each(function (dataObject) {
                        var dataObj = dataContext.subData[i];
                        if (dataObj) {
                            subSeries.data.setIndex(i, dataObj);
                            if (!subSeries.dataItems[i].get("visible")) {
                                subSeries.dataItems[i].show();
                            }
                        }
                        else {
                            subSeries.dataItems[i].hide();
                        }

                        i++;
                    });
                }

                var middleAngle = slice.get("startAngle") + slice.get("arc") / 2;
                var firstAngle = series.dataItems[0].get("slice").get("startAngle");


                if (!(refugee == 1 && (checkRefugee.toLowerCase().includes("male") || checkRefugee.toLowerCase().includes("female")))) {
                    console.log("OK")
                    refugee == 0;
                    series.animate({
                        key: "startAngle",
                        to: firstAngle - middleAngle,
                        duration: 1000,
                        easing: am5.ease.out(am5.ease.cubic)
                    });
                    series.animate({
                        key: "endAngle",
                        to: firstAngle - middleAngle + 360,
                        duration: 1000,
                        easing: am5.ease.out(am5.ease.cubic)
                    });
                }
                else {
                    console.log("SelectedSlice 3: ", selectedSlice)
                    selectedSlice = null
                }
            }

            container.appear(1000, 10);

            series.events.on("datavalidated", function () {
                selectSlice(series.slices.getIndex(0));
            });

        }); // end am5.ready()
    }

</script>
