<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="border border-primary col">

    <h5>PieOfPie</h5>

    <!-- Styles -->
    <style>
        #chartdiv {
            margin-top: -200px;
            width: 100%;
            height: 900px;
        }
    </style>



        <!-- Chart code -->
        <script>

            var newData = []
            var root;
            var initializeData = (function () {
                var executed = false;
                console.log("one time")
                return function () {
                    if (!executed) {
                        executed = true;
                        newData = [
                        {
                            category: "Afghan Refugee",
                            value: 49,
                            subData: [
                                { category: "LIP", value: 10 },
                                { category: "BSF", value: 10 },
                                { category: "TECH", value: 10 },
                                { category: "COMMUNITY TRAININGS", value: 10 }
                            ],
                            breakdown: [{
                                category: "Killa Abdullah",
                                value: 29
                            }, {
                                category: "Killa Saifullah",
                                value: 40
                            }, {
                                category: "Sherani",
                                value: 11
                            }, {
                                category: "Chagai",
                                value: 9
                            },
                            {
                                category: "Nushki",
                                value: 9
                            },
                            {
                                category: "Pishin",
                                value: 9
                            },
                            {
                                category: "Zhob",
                                value: 9
                            },
                            {
                                category: "Mastung",
                                value: 9
                            },
                            {
                                category: "Quetta",
                                value: 9
                            }]
                        },
                        {
                            category: "Female",
                            value: 30,
                            subData: [
                                { category: "LIP", value: 10 },
                                { category: "BSF", value: 10 },
                                { category: "TECH", value: 10 },
                                { category: "COMMUNITY TRAININGS", value: 10 }
                            ],
                            breakdown: [{
                                category: "Killa Abdullah",
                                value: 29
                            }, {
                                category: "Killa Saifullah",
                                value: 10
                            }, {
                                category: "Sherani",
                                value: 11
                            }, {
                                category: "Chagai",
                                value: 9
                            },
                            {
                                category: "Nushki",
                                value: 9
                            },
                            {
                                category: "Pishin",
                                value: 9
                            },
                            {
                                category: "Zhob",
                                value: 9
                            },
                            {
                                category: "Mastung",
                                value: 9
                            },
                            {
                                category: "Quetta",
                                value: 9
                            }]

                        }, {
                            category: "Male",
                            value: 21,
                            subData: [
                                { category: "LIP", value: 11 },
                                { category: "BSF", value: 10 },
                                { category: "TECH", value: 0 }
                            ],
                            breakdown: [{
                                category: "Killa Abdullah",
                                value: 29
                            }, {
                                category: "Killa Saifullah",
                                value: 40
                            }, {
                                category: "Sherani",
                                value: 11
                            }, {
                                category: "Chagai",
                                value: 9
                            },
                            {
                                category: "Nushki",
                                value: 9
                            },
                            {
                                category: "Pishin",
                                value: 9
                            },
                            {
                                category: "Zhob",
                                value: 9
                            },
                            {
                                category: "Mastung",
                                value: 9
                            },
                            {
                                category: "Quetta",
                                value: 9
                            }]
                        }
                    ]


                        am5.ready(function () {

                            console.log("In Show...", newData);

                            // Create root element
                            // https://www.amcharts.com/docs/v5/getting-started/#Root_element
                            root = am5.Root.new("chartdiv");

                            // Set themes
                            // https://www.amcharts.com/docs/v5/concepts/themes/
                            root.setThemes([am5themes_Animated.new(root)]);

                            var container = root.container.children.push(
                                am5.Container.new(root, {
                                    width: am5.p100,
                                    height: am5.p100,
                                    //y: am5.percent(70),
                                    //x: am5.percent(0),
                                    layout: root.horizontalLayout
                                })
                            );


                            // ==============================================
                            // Column chart
                            // ==============================================

                  
                            // Create chart
                            // https://www.amcharts.com/docs/v5/charts/xy-chart/
                        var achart = container.children.push(
                            am5xy.XYChart.new(root, {
                               // panY: false,
                                wheelY: "zoomX",
                                wheelX: "zoomY",
                                //layout: root.verticalLayout
                                width: am5.percent(100),
                                height: am5.percent(30),
                                panX: false,
                                panY: false,
                                //centerX: am5.percent(10),
                                y: am5.percent(70),
                                x: am5.percent(0),
                                layout: am5.GridLayout.new(root, {
                                    maxColumns: 2,
                                    fixedWidthGrid: true
                                })
                                //layout: root.verticalLayout
                            })
                        );

                        // Craete Y-axis
                        let yAxis = achart.yAxes.push(
                            am5xy.ValueAxis.new(root, {
                                renderer: am5xy.AxisRendererY.new(root, {
                                })
                            })
                        );

                       
                        // Create X-Axis
                        var xAxis = achart.xAxes.push(
                            am5xy.CategoryAxis.new(root, {
                                maxDeviation: 0.2,
                                renderer: am5xy.AxisRendererX.new(root, {
                                    minGridDistance: 10
                                }),
                                categoryField: "category"
                            })
                        );
                      
                        //xAxis.data.setAll(adata);

                        // Create series
                        var aseries1 = achart.series.push(
                            am5xy.ColumnSeries.new(root, {
                                name: name, //"Series"
                                xAxis: xAxis,
                                yAxis: yAxis,
                                valueYField: "value",
                                categoryXField: "category",
                                tooltip: am5.Tooltip.new(root, {})
                            })
                        );
                        aseries1.columns.template.setAll({
                            tooltipText: "{categoryX}: {valueY}"
                        });

                        var xRenderer = xAxis.get("renderer");
                        xRenderer.labels.template.setAll({
                            rotation: -45,
                            fontSize: 10,
                            centerY: am5.percent(50)
                        });
                   
                        //aseries1.data.setAll(adata);

                        //var aseries2 = achart.series.push(
                        //    am5xy.ColumnSeries.new(root, {
                        //        name: "Series",
                        //        xAxis: xAxis,
                        //        yAxis: yAxis,
                        //        valueYField: "value",
                        //        categoryXField: "category"
                        //    })
                        //);
                        //aseries2.data.setAll(adata);

                        // Add legend
                        var alegend = achart.children.push(am5.Legend.new(root, {}));
                        alegend.data.setAll(achart.series.values);

                            
                        // ==============================================
                        // Column chart
                        // ==============================================



                            // Create main chart
                            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                            var chart = container.children.push(
                                am5percent.PieChart.new(root, {
                                    tooltip: am5.Tooltip.new(root, {}),
                                    radius: am5.percent(95),
                                    // innerRadius: am5.percent(10)
                                    // panY: false,
                                    //wheelY: "zoomX",
                                    //wheelX: "zoomY",
                                    //layout: root.verticalLayout
                                    //width: am5.percent(100),
                                    //height: am5.percent(30),
                                    //panX: false,
                                    //panY: false,
                                    //centerX: am5.percent(10),
                                    //y: am5.percent(70),
                                    x: am5.percent(0),
                                    layout: am5.GridLayout.new(root, {
                                        maxColumns: 2,
                                        fixedWidthGrid: true
                                    })
                                    //layout: root.verticalLayout
                                })
                            );

                            var series2 = chart.series.push(
                                am5percent.PieSeries.new(root, {
                                    name: "Total",
                                    valueField: "beneficiaries",
                                    categoryField: "total"
                                })
                            );

                            series2.data.setAll([{
                                total: "Total",
                                beneficiaries: 60000
                            }]);

                            // Configuring slices
                            series2.slices.template.setAll({
                                stroke: am5.color(0xffffff),
                                strokeWidth: 2
                            })

                            // Disabling labels and ticks
                            series2.labels.template.set("visible", false);
                            series2.ticks.template.set("visible", false);






                            // Create series
                            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                            var series = chart.series.push(
                                am5percent.PieSeries.new(root, {
                                    valueField: "value",
                                    categoryField: "category",
                                    alignLabels: false,
                                })
                            );

                            //series.labels.template.setAll({
                            //    textType: "circular",
                            //    radius: 4
                            //});

                            series.labels.template.setAll({
                                text: "{category}",
                                fontSize: 10,
                                textType: "radial",
                                inside: true,
                                centerX: am5.percent(90),
                                radius: 10,
                                fill: am5.color(0xffffff)
                            })

                            series.ticks.template.set("visible", false);
                            series.slices.template.set("toggleKey", "none");

                            // add events
                            series.slices.template.events.on("click", function (e) {
                                console.log("Slice", e.target.get("fill"))
                                selectSlice(e.target);
                                aseries1.columns.template.setAll({
                                    fill: e.target.get("fill"), //slice
                                    stroke: e.target.get("fill") //slice
                                });

                                console.log(e.target.dataItem.dataContext.breakdown)

                                aseries1.data.setAll(e.target.dataItem.dataContext.breakdown);
                               // yAxis.data.setAll(e.target.dataItem.dataContext.breakdown);
                                xAxis.data.setAll(e.target.dataItem.dataContext.breakdown)
                                //currentSlice = e.target;
                            });


                            // Create sub chart
                            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                            var subChart = container.children.push(
                                am5percent.PieChart.new(root, {
                                    radius: am5.percent(50),
                                    tooltip: am5.Tooltip.new(root, {}),
                                // panY: false,
                                //wheelY: "zoomX",
                                //wheelX: "zoomY",
                                //layout: root.verticalLayout
                                //width: am5.percent(100),
                                //height: am5.percent(30),
                                //panX: false,
                                //panY: false,
                                //centerX: am5.percent(10),
                                //y: am5.percent(70),
                                x: am5.percent(35),
                                //layout: am5.GridLayout.new(root, {
                                //    maxColumns: 2,
                                //    fixedWidthGrid: true
                                //})
                                //layout: root.verticalLayout
                                })
                            );

                            // Create sub series
                            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                            var subSeries = subChart.series.push(
                                am5percent.PieSeries.new(root, {
                                    valueField: "value",
                                    categoryField: "category",
                                    alignLabels: false
                                })
                            );


                            subSeries.labels.template.setAll({
                                text: "{category}",
                                fontSize: 10,
                                textType: "radial",
                                inside: true,
                                centerX: am5.percent(30),
                                radius: 10,
                                fill: am5.color(0x000000)
                            })

                            subSeries.data.setAll([
                                { category: "A", value: 0 },
                                { category: "B", value: 0 },
                                { category: "C", value: 0 },
                                { category: "D", value: 0 },
                                { category: "E", value: 0 },
                                { category: "F", value: 0 },
                                { category: "G", value: 0 }
                            ]);
                            subSeries.slices.template.set("toggleKey", "none");

                            var selectedSlice;

                            series.on("startAngle", function () {
                                updateLines();
                            });

                            container.events.on("boundschanged", function () {
                                root.events.on("frameended", function () {
                                    updateLines();
                                })
                            })

                            function updateLines() {
                                if (selectedSlice) {
                                    var startAngle = selectedSlice.get("startAngle");
                                    var arc = selectedSlice.get("arc");
                                    var radius = selectedSlice.get("radius");

                                    var x00 = radius * am5.math.cos(startAngle);
                                    var y00 = radius * am5.math.sin(startAngle);

                                    var x10 = radius * am5.math.cos(startAngle + arc);
                                    var y10 = radius * am5.math.sin(startAngle + arc);

                                    var subRadius = subSeries.slices.getIndex(0).get("radius");
                                    var x01 = 0;
                                    var y01 = -subRadius;

                                    var x11 = 0;
                                    var y11 = subRadius;

                                    var point00 = series.toGlobal({ x: x00, y: y00 });
                                    var point10 = series.toGlobal({ x: x10, y: y10 });

                                    var point01 = subSeries.toGlobal({ x: x01, y: y01 });
                                    var point11 = subSeries.toGlobal({ x: x11, y: y11 });

                                    line0.set("points", [point00, point01]);
                                    line1.set("points", [point10, point11]);
                                }
                            }

                            // lines
                            var line0 = container.children.push(
                                am5.Line.new(root, {
                                    position: "absolute",
                                    stroke: root.interfaceColors.get("text"),
                                    strokeDasharray: [2, 2]
                                })
                            );
                            var line1 = container.children.push(
                                am5.Line.new(root, {
                                    position: "absolute",
                                    stroke: root.interfaceColors.get("text"),
                                    strokeDasharray: [2, 2]
                                })
                            );

                            // Set data
                            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data
                            series.data.setAll(
                                newData
                            );

                            function selectSlice(slice) {
                                selectedSlice = slice;
                                var dataItem = slice.dataItem;
                                var dataContext = dataItem.dataContext;

                                if (dataContext) {
                                    var i = 0;
                                    subSeries.data.each(function (dataObject) {
                                        var dataObj = dataContext.subData[i];
                                        if (dataObj) {
                                            subSeries.data.setIndex(i, dataObj);
                                            if (!subSeries.dataItems[i].get("visible")) {
                                                subSeries.dataItems[i].show();
                                            }
                                        }
                                        else {
                                            subSeries.dataItems[i].hide();
                                        }

                                        i++;
                                    });
                                }

                                var middleAngle = slice.get("startAngle") + slice.get("arc") / 2;
                                var firstAngle = series.dataItems[0].get("slice").get("startAngle");

                                series.animate({
                                    key: "startAngle",
                                    to: firstAngle - middleAngle,
                                    duration: 1000,
                                    easing: am5.ease.out(am5.ease.cubic)
                                });
                                series.animate({
                                    key: "endAngle",
                                    to: firstAngle - middleAngle + 360,
                                    duration: 1000,
                                    easing: am5.ease.out(am5.ease.cubic)
                                });
                            }

                            container.appear(1000, 10);

                            series.events.on("datavalidated", function () {
                                selectSlice(series.slices.getIndex(0));
                            });

                        }); // end am5.ready()

                    }
                };
            })();

            //It Will Initialize the data on Page Load and would never be called again...
            initializeData();

        </script>

        <!-- HTML -->
        <div id="chartdiv"></div>

    </div>

