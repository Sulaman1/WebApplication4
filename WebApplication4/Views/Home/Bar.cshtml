 function selectSlice(slice) {
                                   
                                    selectedSlice = slice;
                                    console.log("Slice Select: ", slice)
                                    var dataItem
                                    var dataContext
                                    if (!slice._dataItem) {
                                        dataItem = slice._dataItems[0];
                                        dataContext = dataItem.dataContext;
                                        console.log("FIRST CONTEXT DATA: ", dataContext)
                                        if (dataContext) {
                                            var i = 0;
                                            subSeries.data.each(function (dataObject) {
                                                var dataObj = dataContext.subData[i];
                                                if (dataObj) {
                                                    subSeries.data.setIndex(i, dataObj);
                                                    if (!subSeries.dataItems[i].get("visible")) {
                                                        subSeries.dataItems[i].show();
                                                    }
                                                }
                                                else {
                                                    subSeries.dataItems[i].hide();
                                                }

                                                i++;
                                            });
                                        }
                                        
                                    }
                                    else{                                        
                                        dataItem = slice._dataItem
                                        dataContext = dataItem.dataContext
                                        console.log("SECOND CONTEXT DATA: ", dataContext)
                                        if (dataContext) {
                                            var i = 0;
                                            subSeries.data.each(function (dataObject) {
                                                var dataObj = dataContext.subData[i];
                                                console.log("1")
                                                if (dataObj) {
                                                    console.log("2")
                                                    subSeries.data.setIndex(i, dataObj);
                                                    if (!subSeries.dataItems[i].get("visible")) {
                                                        console.log("3")
                                                        subSeries.dataItems[i].show();
                                                    }
                                                }
                                                else {
                                                    console.log("4")
                                                    subSeries.dataItems[i].hide();
                                                }

                                                i++;
                                            });
                                        }

                                        var middleAngle = slice.get("startAngle") + slice.get("arc") / 2;
                                        var firstAngle = series.dataItems[0].get("slice").get("startAngle");

                                        series.animate({
                                            key: "startAngle",
                                            to: firstAngle - middleAngle,
                                            duration: 1000,
                                            easing: am5.ease.out(am5.ease.cubic)
                                        });
                                        series.animate({
                                            key: "endAngle",
                                            to: firstAngle - middleAngle + 360,
                                            duration: 1000,
                                            easing: am5.ease.out(am5.ease.cubic)
                                        });
                                    }

                                    console.log("CONTEXT DATA: ", dataContext)

                                   
                                }



































<!-- Styles -->
<style>
    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>

<!-- Resources -->
<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>

<!-- Chart code -->
<script>
    am5.ready(function () {

        // Create root element
        // https://www.amcharts.com/docs/v5/getting-started/#Root_element
        var root = am5.Root.new("chartdiv");


        // Set themes
        // https://www.amcharts.com/docs/v5/concepts/themes/
        root.setThemes([
            am5themes_Animated.new(root)
        ]);


        // Create chart
        // https://www.amcharts.com/docs/v5/charts/xy-chart/
        var chart = root.container.children.push(am5xy.XYChart.new(root, {
            panX: false,
            panY: false,
            wheelX: "panX",
            wheelY: "zoomX",
            layout: root.verticalLayout
        }));

        // Add scrollbar
        // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/
        chart.set("scrollbarX", am5.Scrollbar.new(root, {
            orientation: "horizontal"
        }));

        var data = [{
            "year": "2021",
            "europe": 2.5,
            "namerica": 2.5,
            "asia": 2.1,
            "lamerica": 1,
            "meast": 0.8,
            "africa": 0.4
        }, {
            "year": "2022",
            "europe": 2.6,
            "namerica": 2.7,
            "asia": 2.2,
            "lamerica": 0.5,
            "meast": 0.4,
            "africa": 0.3
        }, {
            "year": "2023",
            "europe": 2.8,
            "namerica": 2.9,
            "asia": 2.4,
            "lamerica": 0.3,
            "meast": 0.9,
            "africa": 0.5
        }]


        // Create axes
        // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
        var xRenderer = am5xy.AxisRendererX.new(root, {});
        var xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {
            categoryField: "year",
            renderer: xRenderer,
            tooltip: am5.Tooltip.new(root, {})
        }));

        xRenderer.grid.template.setAll({
            location: 1
        })

        xAxis.data.setAll(data);

        var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
            min: 0,
            renderer: am5xy.AxisRendererY.new(root, {
                strokeOpacity: 0.1
            })
        }));


        // Add legend
        // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/
        var legend = chart.children.push(am5.Legend.new(root, {
            centerX: am5.p50,
            x: am5.p50
        }));


        // Add series
        // https://www.amcharts.com/docs/v5/charts/xy-chart/series/
        function makeSeries(name, fieldName) {
            var series = chart.series.push(am5xy.ColumnSeries.new(root, {
                name: name,
                stacked: true,
                xAxis: xAxis,
                yAxis: yAxis,
                valueYField: fieldName,
                categoryXField: "year"
            }));

            series.columns.template.setAll({
                tooltipText: "{name}, {categoryX}: {valueY}",
                tooltipY: am5.percent(10)
            });
            series.data.setAll(data);

            // Make stuff animate on load
            // https://www.amcharts.com/docs/v5/concepts/animations/
            series.appear();

            series.bullets.push(function () {
                return am5.Bullet.new(root, {
                    sprite: am5.Label.new(root, {
                        text: "{valueY}",
                        fill: root.interfaceColors.get("alternativeText"),
                        centerY: am5.p50,
                        centerX: am5.p50,
                        populateText: true
                    })
                });
            });

            legend.data.push(series);
        }

        makeSeries("Europe", "europe");
        makeSeries("North America", "namerica");
        makeSeries("Asia", "asia");
        makeSeries("Latin America", "lamerica");
        makeSeries("Middle East", "meast");
        makeSeries("Africa", "africa");


        // Make stuff animate on load
        // https://www.amcharts.com/docs/v5/concepts/animations/
        chart.appear(1000, 100);

    }); // end am5.ready()
</script>

<!-- HTML -->
<div id="chartdiv"></div>