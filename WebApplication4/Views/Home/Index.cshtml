@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "PieOfPie";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


@*
    SUB PIE CHART
    Community Trainning
    Vocational Trainning
    LIP
    Bds
    Enterprise Clusters
*@


<div class="border border-primary container">
    <div class="row" style="height:600px; border:solid 2px blue ">


        <div class="border border-primary col-3">

            <!-- Styles -->
            <style>
                #myChart {
                    width: 100%;
                    height: 10%;
                }

            </style>
            <div>
                <canvas id="myChart"></canvas>
            </div>

            <script>
                const ctx = document.getElementById('myChart');


                const defaultLegendClickHandler = Chart.defaults.plugins.legend.onClick;                
                const pieDoughnutLegendClickHandler = Chart.controllers.doughnut.overrides.plugins.legend.onClick;
                const newLegendClickHandler = function (e, legendItem, legend) {
                    const index = legendItem.datasetIndex;
                    const type = legend.chart.config.type;
                    console.log("IN")

                    if (index > 1) {
                        // Do the original logic
                        if (type === 'pie' || type === 'doughnut') {
                            pieDoughnutLegendClickHandler(e, legendItem, legend)
                        } else {
                            defaultLegendClickHandler(e, legendItem, legend);
                        }

                    } else {
                        let ci = legend.chart;
                        [
                            ci.getDatasetMeta(0),
                            ci.getDatasetMeta(1)
                        ].forEach(function (meta) {
                            meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;
                        });
                        ci.update();
                    }
                };

                const data = {
                    //labels: [
                    //    'TB',
                    //    'CBT',
                    //    'LIP',
                    //    'EBP'
                    //],

                    /**
                         * 'Killa Abdullah',
                                'Killa Saifullah',
                                'Sherani',
                                'Chagai',
                                'Nushki',
                                'Pishin',
                                'Zhob',
                                'Mastung',
                                'Quetta'
                     */
                    //data: [1255, 1948, 232, 2000, 648,3584, 371, 600, 0],
                    //'rgb(54, 162, 235)',
                    /**
                      * 'rgb(54, 162, 235)',
                          'rgb(255, 232, 0)',
                          'rgb(112, 60, 78)',
                          'rgb(122, 245, 46)',
                          'rgb(29, 92, 161)'
                     */
                    datasets: [{
                        label: 'Polar Graph',
                        data: [12.85, 4.49, 7.69, 2.71],
                        borderWidth: 0,
                        backgroundColor: [
                            'rgb(255, 99, 132)',
                            'rgb(75, 192, 192)',
                            'rgb(255, 205, 86)',
                            'rgb(201, 203, 207)'

                        ],
                        hoverBackgroundColor: [
                            'rgb(255, 99, 132)',
                            'rgb(75, 192, 192)',
                            'rgb(255, 205, 86)',
                            'rgb(201, 203, 207)'
                        ]
                    }]
                };

                var polarChart = new Chart(ctx, {
                    type: 'polarArea',
                    data: data,
                    options: {
                        scale: {
                            ticks: {
                                display:true,
                                stepSize: 2
                            }
                        },
                        legend: {
                            position: "top",
                            plugins: {
                                legend: {
                                    onClick: newLegendClickHandler
                                }
                            },
                            labels: {
                                boxWidth: 11,
                                fontColor: "#757681",
                                fontSize: 3
                            }
                        }
                    }
                });

            </script>

        </div>

       
        <div class="border border-primary col-9">

            <h5>PieOfPie</h5>
            <!-- Resources -->
            @*<div style="float:right; border: solid 2px yellow; height:100px">*@
                <input type="text" id="searchInput" placeholder="Search..." />

                <button onclick="PDOI()">PDOI</button>
                <button onclick="REFUGEE()">REFUGEE</button>

            @*</div>*@

           @* <div style="border: solid 2px yellow; height:100px; width:100px">
            </div>*@

            <!-- Styles -->
            <style>
                #chartdiv {
                    border: dashed 2px green;
                    width: 100%;
                    height: 500px;
                }

            </style>

          
            <!-- Chart code -->
            <script>

                var newData = []
                var root;
                var i = 0;
                var initializeData = (function () {
                    var executed = false;
                    console.log("one time")
                    return function () {
                        if (!executed) {
                            executed = true;

                            /**
                              *  SUB PIE CHART
                                    Community Trainning
                                    Vocational Trainning
                                    LIP
                                    Bds
                                    Enterprise Clusters
                             */

                            newData = [
                                {
                                    "category": "Afghan Refugee",
                                    value: 49,
                                    subData: [
                                        { "category": "EDPs", value: 25500 },
                                        { "category": "LIPs", value: 4500 },
                                        { "category": "CBT", value: 9360 },
                                        { "category": "TVS", value: 12750 },
                                        { "category": "BDS", value: 4500 }
                                    ],
                                    breakdown: [{
                                        "category": "Killa Abdullah",
                                        "edp": 2.52,
                                        "lip": 2.45,
                                        "cbt": 2.51,
                                        "tvs": 1,
                                        "bds": 4.2
                                    }, {
                                        "category": "Killa Saifullah",
                                        "edp": 2.25,
                                        "lip": 2.45,
                                        "cbt": 2.31,
                                        "tvs": 1,
                                        "bds": 4.2
                                    }, {
                                        "category": "Sherani",
                                        "edp": 2.52,
                                        "lip": 2.45,
                                        "cbt": 2.1,
                                        "tvs": 1,
                                        "bds": 4.2
                                    }, {
                                        "category": "Chagai",
                                        "edp": 2.65,
                                        "lip": 2.35,
                                        "cbt": 24.1,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Nushki",
                                        "edp": 2.25,
                                        "lip": 2.65,
                                        "cbt": 2.71,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Pishin",
                                        "edp": 2.56,
                                        "lip": 2.54,
                                        "cbt": 2.31,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Zhob",
                                        "edp": 2.53,
                                        "lip": 2.52,
                                        "cbt": 2.81,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Mastung",
                                        "edp": 2.51,
                                        "lip": 2.65,
                                        "cbt": 2.51,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Quetta",
                                        "edp": 2.25,
                                        "lip": 2.65,
                                        "cbt": 2.71,
                                        "tvs": 1,
                                        "bds": 4.2
                                    }]
                                },
                                {
                                    "category": "Female",
                                    value: 30,
                                    subData: [
                                        { "category": "EDPs", value: 10 },
                                        { "category": "LIPs", value: 20 },
                                        { "category": "CBT", value: 5 },
                                        { "category": "TVS", value: 17 },
                                        { "category": "BDS", value: 6 }
                                    ],
                                    breakdown: [{
                                        "category": "Killa Abdullah",
                                        "edp": 2.75,
                                        "lip": 2.15,
                                        "cbt": 2.41,
                                        "tvs": 1,
                                        "bds": 4.2
                                    }, {
                                        "category": "Killa Saifullah",
                                        "edp": 2.45,
                                        "lip": 2.65,
                                        "cbt": 2.31,
                                        "tvs": 1,
                                        "bds": 4.2
                                    }, {
                                        "category": "Sherani",
                                        "edp": 2.25,
                                        "lip": 2.15,
                                        "cbt": 2.51,
                                        "tvs": 1,
                                        "bds": 4.2
                                    }, {
                                        "category": "Chagai",
                                        "edp": 2.56,
                                        "lip": 2.57,
                                        "cbt": 2.51,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Nushki",
                                        "edp": 2.25,
                                        "lip": 2.15,
                                        "cbt": 26.1,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Pishin",
                                        "edp": 2.85,
                                        "lip": 2.75,
                                        "cbt": 2.81,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Zhob",
                                        "edp": 2.65,
                                        "lip": 2.85,
                                        "cbt": 2.71,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Mastung",
                                        "edp": 2.5,
                                        "lip": 2.5,
                                        "cbt": 2.1,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Quetta",
                                        "edp": 2.5,
                                        "lip": 2.5,
                                        "cbt": 2.1,
                                        "tvs": 1,
                                        "bds": 4.2
                                    }]

                                }, {
                                    "category": "Male",
                                    value: 21,
                                    subData: [
                                        { "category": "EDPs", value: 10 },
                                        { "category": "LIPs", value: 20 },
                                        { "category": "CBT", value: 5 },
                                        { "category": "TVS", value: 17 },
                                        { "category": "BDS", value: 6 }
                                    ],
                                    breakdown: [{
                                        "category": "Killa Abdullah",
                                        "edp": 2.1,
                                        "lip": 2.2,
                                        "cbt": 2.3,
                                        "tvs": 1,
                                        "bds": 4.2
                                    }, {
                                        "category": "Killa Saifullah",
                                        "edp": 2.1,
                                        "lip": 2.2,
                                        "cbt": 2.3,
                                        "tvs": 1,
                                        "bds": 4.2
                                    }, {
                                        "category": "Sherani",
                                        "edp": 2.1,
                                        "lip": 2.2,
                                        "cbt": 2.3,
                                        "tvs": 1,
                                        "bds": 4.2
                                    }, {
                                        "category": "Chagai",
                                        "edp": 2.1,
                                        "lip": 2.2,
                                        "cbt": 2.3,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Nushki",
                                        "edp": 2.2,
                                        "lip": 2.3,
                                        "cbt": 2.1,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Pishin",
                                        "edp": 2.5,
                                        "lip": 2.2,
                                        "cbt": 2.1,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Zhob",
                                        "edp": 2.25,
                                        "lip": 2.53,
                                        "cbt": 2.1,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Mastung",
                                        "edp": 2.52,
                                        "lip": 2.25,
                                        "cbt": 2.1,
                                        "tvs": 1,
                                        "bds": 4.2
                                    },
                                    {
                                        "category": "Quetta",
                                        "edp": 2.45,
                                        "lip": 2.55,
                                        "cbt": 2.1,
                                        "tvs": 1,
                                        "bds": 4.2
                                    }]
                                }
                            ]

                            am5.ready(function () {

                                console.log("In Show...", newData);

                                // Create root element
                                // https://www.amcharts.com/docs/v5/getting-started/#Root_element
                                root = am5.Root.new("chartdiv");

                                // Set themes
                                // https://www.amcharts.com/docs/v5/concepts/themes/
                                root.setThemes([am5themes_Animated.new(root)]);

                                var container = root.container.children.push(
                                    am5.Container.new(root, {
                                        width: am5.p100,
                                        height: am5.p100,
                                        //y: am5.percent(0),
                                        //x: am5.percent(0),
                                        layout: root.horizontalLayout
                                    })
                                );


                                // ==============================================
                                // Column chart
                                // ==============================================
                                var xxAxis;
                                var sseries;
                                function columnStart(data) {

                                    console.log("Dataaaa: ", data)

                                    // Create chart
                                    // https://www.amcharts.com/docs/v5/charts/xy-chart/
                                    var achart = container.children.push(
                                        am5xy.XYChart.new(root, {
                                            // panY: false,
                                            wheelY: "zoomX",
                                            wheelX: "zoomY",
                                            //layout: root.verticalLayout
                                            width: am5.percent(150),
                                            height: am5.percent(57),
                                            panX: false,
                                            panY: false,
                                            //centerX: am5.percent(10),
                                            y: am5.percent(45),
                                            x: am5.percent(35),
                                            layout: am5.GridLayout.new(root, {
                                                maxColumns: 2,
                                                fixedWidthGrid: true
                                            })
                                            //layout: root.verticalLayout
                                        })
                                    );


                                    // Create axes
                                    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
                                    //var xRenderer = am5xy.AxisRendererX.new(root, {});
                                    //xxAxis = achart.xAxes.push(am5xy.CategoryAxis.new(root, {
                                    //    categoryField: "category",
                                    //    renderer: xRenderer,
                                    //    tooltip: am5.Tooltip.new(root, {})
                                    //}));

                                    //xRenderer.grid.template.setAll({
                                    //    location: 1
                                    //})

                                    // Create X-Axis
                                    xxAxis = achart.xAxes.push(
                                        am5xy.CategoryAxis.new(root, {
                                            maxDeviation: 0.2,
                                            renderer: am5xy.AxisRendererX.new(root, {
                                                minGridDistance: 10
                                            }),
                                            categoryField: "category"
                                        })
                                    );
                                    var xRenderer = xxAxis.get("renderer");
                                    xRenderer.labels.template.setAll({
                                        rotation: -30,
                                        fontSize: 10,
                                        centerY: am5.percent(50)
                                    });

                                    xxAxis.data.setAll(data);

                                    // Craete Y-axis
                                    let yAxis = achart.yAxes.push(
                                        am5xy.ValueAxis.new(root, {
                                            renderer: am5xy.AxisRendererY.new(root, {
                                            })
                                        })
                                    );

                                    //var yAxis = achart.yAxes.push(am5xy.ValueAxis.new(root, {
                                    //    min: 0,
                                    //    renderer: am5xy.AxisRendererY.new(root, {
                                    //        strokeOpacity: 0.1
                                    //    })
                                    //}));

                                    //// Add legend
                                    //// https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/
                                    //var legend = achart.children.push(am5.Legend.new(root, {
                                    //    centerX: am5.p50,
                                    //    x: am5.p50
                                    //}));


                                    // Add legend
                                    var legend = achart.children.push(am5.Legend.new(root, {
                                        centerY: am5.percent(50),
                                        y: am5.percent(50),
                                        layout: root.verticalLayout,
                                        height: am5.percent(100),
                                        verticalScrollbar: am5.Scrollbar.new(root, {
                                            orientation: "vertical"
                                        })
                                    }));

                                  

                                    // Add series
                                    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/
                                    function makeSeries(name, fieldName) {

                                        sseries = achart.series.push(am5xy.ColumnSeries.new(root, {
                                            name: name,
                                            stacked: true,
                                            xAxis: xxAxis,
                                            yAxis: yAxis,
                                            valueYField: fieldName,
                                            categoryXField: "category"
                                        }));

                                        sseries.columns.template.setAll({
                                            tooltipText: "{name}, {categoryX}: {valueY}",
                                            tooltipY: am5.percent(10)
                                        });
                                        sseries.data.setAll(data);

                                        // Make stuff animate on load
                                        // https://www.amcharts.com/docs/v5/concepts/animations/
                                        //series.appear();


                                        sseries.bullets.push(function () {
                                            return am5.Bullet.new(root, {
                                                sprite: am5.Label.new(root, {
                                                    //text: "{valueY}",
                                                    fill: root.interfaceColors.get("alternativeText"),
                                                    centerY: am5.p50,
                                                    centerX: am5.p50,
                                                    fontSize: 10,
                                                    populateText: true
                                                })
                                            });
                                        });

                                        legend.data.push(sseries);
                                        //legend.data.setAll(achart.series.values);
                                    }
                                    console.log("i: ", i)
                                    if (i == 0) {

                                        makeSeries("EDPs", "edp");
                                        makeSeries("LIPs", "lip");
                                        makeSeries("CBT", "cbt");
                                        makeSeries("TVS", "tvs");
                                        makeSeries("BDS", "bds");


                                    }
                                    i = 1;

                                    //function end

                                }


                                // ==============================================
                                // END Column chart
                                // ==============================================

                                // Create main chart
                                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                                var chart = container.children.push(
                                    am5percent.PieChart.new(root, {
                                        tooltip: am5.Tooltip.new(root, {}),
                                        radius: am5.percent(150),
                                        // innerRadius: am5.percent(10)
                                        // panY: false,
                                        //wheelY: "zoomX",
                                        //wheelX: "zoomY",
                                        //layout: root.verticalLayout
                                        width: am5.percent(70),
                                        height: am5.percent(30),
                                        //panX: false,
                                        //panY: false,

                                        y: am5.percent(10),
                                        x: am5.percent(10),
                                        layout: am5.GridLayout.new(root, {
                                            maxColumns: 2,
                                            fixedWidthGrid: true
                                        })
                                        //layout: root.verticalLayout
                                    })
                                );

                                var series2 = chart.series.push(
                                    am5percent.PieSeries.new(root, {
                                        name: "Total",
                                        valueField: "beneficiaries",
                                        categoryField: "total"
                                    })
                                );

                                series2.data.setAll([{
                                    total: "Total",
                                    beneficiaries: 60000
                                }]);

                                series2.bullets.push(function () {
                                    return am5.Bullet.new(root, {
                                        sprite: am5.Label.new(root, {
                                            text: "Total: {beneficiaries}",
                                            centerX: am5.percent(50),
                                            centerY: am5.percent(130),
                                            populateText: true,
                                            fill: am5.color(0xffffff)
                                        })
                                    });
                                });


                                // Configuring slices
                                series2.slices.template.setAll({
                                    stroke: am5.color(0xffffff),
                                    strokeWidth: 2
                                })

                                series2.labels.template.setAll({
                                    // text: "{beneficiaries}",
                                    //fontSize: 10,
                                    textType: "circular",
                                    //inside: true,
                                    //centerX: am5.percent(90),
                                    radius: 10,
                                    fill: am5.color(0xffffff)
                                })

                                // add events
                                //series2.slices.template.events.on("click", function (e) {
                                //    console.log("Series2 Slice", e.target.get("fill"))
                                //    selectSlice(e.target);
                                //    aseries1.columns.template.setAll({
                                //        fill: e.target.get("fill"), //slice
                                //        stroke: e.target.get("fill") //slice
                                //    });

                                //    console.log("DATA: ", e.target.dataItem.dataContext.breakdown)

                                //    aseries1.data.setAll(e.target.dataItem.dataContext.breakdown);
                                //    // yAxis.data.setAll(e.target.dataItem.dataContext.breakdown);
                                //    xAxis.data.setAll(e.target.dataItem.dataContext.breakdown)

                                //    //makeSeries("LIP", "lip");
                                //    //makeSeries("BSF", "bsf");
                                //    //makeSeries("Tech", "tech");
                                //    //makeSeries("Community Training", "ct");
                                //    //currentSlice = e.target;
                                //});

                                //series2.ticks.template.set("visible", false);
                                //series2.slices.template.set("toggleKey", "none");

                                //// Disabling labels and ticks
                                //series2.labels.template.set("visible", false);
                                //series2.ticks.template.set("visible", false);

                                // Create series
                                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                                var series = chart.series.push(
                                    am5percent.PieSeries.new(root, {
                                        valueField: "value",
                                        categoryField: "category",
                                        alignLabels: false,
                                    })
                                );

                                //series.labels.template.setAll({
                                //    textType: "circular",
                                //    radius: 4
                                //});

                                series.labels.template.setAll({
                                    text: "{category}[/]: [bold]{value}[/]",
                                    fontSize: 15,
                                    textType: "circular",
                                    textAlign: "center",
                                    oversizedBehavior: "wrap",
                                    inside: true,
                                    centerX: am5.percent(90),
                                    radius: 10,
                                    fill: am5.color(0xffffff)
                                    })

                                series.ticks.template.set("visible", false);
                                series.slices.template.set("toggleKey", "none");

                                // add events
                                series.slices.template.events.on("click", function (e) {
                                    console.log("Slice", e.target.get("fill"))
                                    selectSlice(e.target);
                                    if (sseries) {
                                        sseries.columns.template.setAll({
                                            fill: e.target.get("fill"), //slice
                                            stroke: e.target.get("fill") //slice
                                        });

                                    }

                                    if (i == 0) {
                                        console.log("Show column")
                                        columnStart(e.target.dataItem.dataContext.breakdown)
                                    }


                                    //sseries.data.setAll(dummy);
                                    //// yAxis.data.setAll(e.target.dataItem.dataContext.breakdown);
                                    //xxAxis.data.setAll(dummy)
                                    ////currentSlice = e.target;
                                });


                                // Create sub chart
                                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                                var subChart = container.children.push(
                                    am5percent.PieChart.new(root, {
                                        radius: am5.percent(40),
                                        tooltip: am5.Tooltip.new(root, {}),
                                        // panY: false,
                                        //wheelY: "zoomX",
                                        //wheelX: "zoomY",
                                        //layout: root.verticalLayout
                                        //width: am5.percent(50),
                                        //height: am5.percent(30),
                                        //panX: false,
                                        //panY: false,
                                        //centerX: am5.percent(10),
                                        y: am5.percent(-25),
                                        x: am5.percent(40),
                                        //layout: am5.GridLayout.new(root, {
                                        //    maxColumns: 2,
                                        //    fixedWidthGrid: true
                                        //})
                                        //layout: root.verticalLayout
                                    })
                                );

                                // Create sub series
                                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                                var subSeries = subChart.series.push(
                                    am5percent.PieSeries.new(root, {
                                        valueField: "value",
                                        categoryField: "category",
                                        alignLabels: false
                                    })
                                );

                                subSeries.labels.template.setAll({
                                    text: "{category}[/]: [bold]{value}[/]",
                                    fontSize: 10,
                                    oversizedBehavior: "wrap",
                                    textAlign: "center",
                                    maxWidth: 90,
                                    textType: "circular",
                                    //inside: true,
                                    //centerX: am5.percent(-40),
                                    radius: 10,
                                    fill: am5.color(0x000000)
                                })


                                subSeries.data.setAll([
                                    { category: "A", value: 0 },
                                    { category: "B", value: 0 },
                                    { category: "C", value: 0 },
                                    { category: "D", value: 0 },
                                    { category: "E", value: 0 },
                                    { category: "F", value: 0 },
                                    { category: "G", value: 0 }
                                ]);
                                subSeries.slices.template.set("toggleKey", "none");

                                var selectedSlice;

                                series.on("startAngle", function () {
                                    updateLines();
                                });

                                container.events.on("boundschanged", function () {
                                    root.events.on("frameended", function () {
                                        updateLines();
                                    })
                                })

                                function updateLines() {
                                    if (selectedSlice) {
                                        var startAngle = selectedSlice.get("startAngle");
                                        var arc = selectedSlice.get("arc");
                                        var radius = selectedSlice.get("radius");

                                        var x00 = radius * am5.math.cos(startAngle);
                                        var y00 = radius * am5.math.sin(startAngle);

                                        var x10 = radius * am5.math.cos(startAngle + arc);
                                        var y10 = radius * am5.math.sin(startAngle + arc);

                                        var subRadius = subSeries.slices.getIndex(0).get("radius");
                                        var x01 = 0;
                                        var y01 = -subRadius;

                                        var x11 = 0;
                                        var y11 = subRadius;

                                        var point00 = series.toGlobal({ x: x00, y: y00 });
                                        var point10 = series.toGlobal({ x: x10, y: y10 });

                                        var point01 = subSeries.toGlobal({ x: x01, y: y01 });
                                        var point11 = subSeries.toGlobal({ x: x11, y: y11 });

                                        line0.set("points", [point00, point01]);
                                        line1.set("points", [point10, point11]);
                                    }
                                }

                                // lines
                                var line0 = container.children.push(
                                    am5.Line.new(root, {
                                        position: "absolute",
                                        stroke: root.interfaceColors.get("text"),
                                        strokeDasharray: [2, 2]
                                    })
                                );
                                var line1 = container.children.push(
                                    am5.Line.new(root, {
                                        position: "absolute",
                                        stroke: root.interfaceColors.get("text"),
                                        strokeDasharray: [2, 2]
                                    })
                                );

                                // Set data
                                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data
                                series.data.setAll(
                                    newData
                                );

                                function selectSlice(slice) {
                                    selectedSlice = slice;
                                    var dataItem = slice.dataItem;
                                    var dataContext = dataItem.dataContext;

                                    if (dataContext) {
                                        var i = 0;
                                        subSeries.data.each(function (dataObject) {
                                            var dataObj = dataContext.subData[i];
                                            if (dataObj) {
                                                subSeries.data.setIndex(i, dataObj);
                                                if (!subSeries.dataItems[i].get("visible")) {
                                                    subSeries.dataItems[i].show();
                                                }
                                            }
                                            else {
                                                subSeries.dataItems[i].hide();
                                            }

                                            i++;
                                        });
                                    }

                                    var middleAngle = slice.get("startAngle") + slice.get("arc") / 2;
                                    var firstAngle = series.dataItems[0].get("slice").get("startAngle");

                                    series.animate({
                                        key: "startAngle",
                                        to: firstAngle - middleAngle,
                                        duration: 1000,
                                        easing: am5.ease.out(am5.ease.cubic)
                                    });
                                    series.animate({
                                        key: "endAngle",
                                        to: firstAngle - middleAngle + 360,
                                        duration: 1000,
                                        easing: am5.ease.out(am5.ease.cubic)
                                    });
                                }

                                container.appear(1000, 10);

                                series.events.on("datavalidated", function () {
                                    selectSlice(series.slices.getIndex(0));
                                });

                            }); // end am5.ready()

                        }
                    };
                })();

                //It Will Initialize the data on Page Load and would never be called again...
                initializeData();


                function PDOI() {
                    console.log("PDOI")
                    i=0;
                    refugee = 0;
                    var pdoi = [
                        {
                            "category": "Afghan Refugee",
                            value: 49,
                            subData: [
                                { "category": "EDPs", value: 25500 },
                                { "category": "LIPs", value: 4500 },
                                { "category": "CBT", value: 9360 },
                                { "category": "TVS", value: 12750 },
                                { "category": "BDS", value: 4500 }
                            ],
                            breakdown: [{
                                "category": "Killa Abdullah",
                                "edp": 2.52,
                                "lip": 2.45,
                                "cbt": 2.51,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Killa Saifullah",
                                "edp": 2.25,
                                "lip": 2.45,
                                "cbt": 2.31,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Sherani",
                                "edp": 2.52,
                                "lip": 2.45,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Chagai",
                                "edp": 2.65,
                                "lip": 2.35,
                                "cbt": 24.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Nushki",
                                "edp": 2.25,
                                "lip": 2.65,
                                "cbt": 2.71,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Pishin",
                                "edp": 2.56,
                                "lip": 2.54,
                                "cbt": 2.31,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Zhob",
                                "edp": 2.53,
                                "lip": 2.52,
                                "cbt": 2.81,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Mastung",
                                "edp": 2.51,
                                "lip": 2.65,
                                "cbt": 2.51,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Quetta",
                                "edp": 2.25,
                                "lip": 2.65,
                                "cbt": 2.71,
                                "tvs": 1,
                                "bds": 4.2
                            }]
                        },
                        {
                            "category": "Female",
                            value: 30,
                            subData: [
                                { "category": "EDPs", value: 10 },
                                { "category": "LIPs", value: 20 },
                                { "category": "CBT", value: 5 },
                                { "category": "TVS", value: 17 },
                                { "category": "BDS", value: 6 }
                            ],
                            breakdown: [{
                                "category": "Killa Abdullah",
                                "edp": 2.75,
                                "lip": 2.15,
                                "cbt": 2.41,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Killa Saifullah",
                                "edp": 2.45,
                                "lip": 2.65,
                                "cbt": 2.31,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Sherani",
                                "edp": 2.25,
                                "lip": 2.15,
                                "cbt": 2.51,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Chagai",
                                "edp": 2.56,
                                "lip": 2.57,
                                "cbt": 2.51,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Nushki",
                                "edp": 2.25,
                                "lip": 2.15,
                                "cbt": 26.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Pishin",
                                "edp": 2.85,
                                "lip": 2.75,
                                "cbt": 2.81,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Zhob",
                                "edp": 2.65,
                                "lip": 2.85,
                                "cbt": 2.71,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Mastung",
                                "edp": 2.5,
                                "lip": 2.5,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Quetta",
                                "edp": 2.5,
                                "lip": 2.5,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            }]

                        }, {
                            "category": "Male",
                            value: 21,
                            subData: [
                                { "category": "EDPs", value: 10 },
                                { "category": "LIPs", value: 20 },
                                { "category": "CBT", value: 5 },
                                { "category": "TVS", value: 17 },
                                { "category": "BDS", value: 6 }
                            ],
                            breakdown: [{
                                "category": "Killa Abdullah",
                                "edp": 2.1,
                                "lip": 2.2,
                                "cbt": 2.3,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Killa Saifullah",
                                "edp": 2.1,
                                "lip": 2.2,
                                "cbt": 2.3,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Sherani",
                                "edp": 2.1,
                                "lip": 2.2,
                                "cbt": 2.3,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Chagai",
                                "edp": 2.1,
                                "lip": 2.2,
                                "cbt": 2.3,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Nushki",
                                "edp": 2.2,
                                "lip": 2.3,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Pishin",
                                "edp": 2.5,
                                "lip": 2.2,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Zhob",
                                "edp": 2.25,
                                "lip": 2.53,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Mastung",
                                "edp": 2.52,
                                "lip": 2.25,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Quetta",
                                "edp": 2.45,
                                "lip": 2.55,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            }]
                        }
                    ]


                    newData = pdoi

                    root.dispose();
                    rerender()
                }

                var refugee = 0;

                function REFUGEE() {
                    console.log("Refugee");
                    i=0;
                    refugee = 1;
                    var pdoi = [
                        {
                            "category": "Afghan Refugee",
                            value: 49,
                            subData: [
                                { "category": "EDPs", value: 25500 },
                                { "category": "LIPs", value: 4500 },
                                { "category": "CBT", value: 9360 },
                                { "category": "TVS", value: 12750 },
                                { "category": "BDS", value: 4500 }
                            ],
                            breakdown: [{
                                "category": "Killa Abdullah",
                                "edp": 2.52,
                                "lip": 2.45,
                                "cbt": 2.51,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Killa Saifullah",
                                "edp": 2.25,
                                "lip": 2.45,
                                "cbt": 2.31,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Sherani",
                                "edp": 2.52,
                                "lip": 2.45,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Chagai",
                                "edp": 2.65,
                                "lip": 2.35,
                                "cbt": 24.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Nushki",
                                "edp": 2.25,
                                "lip": 2.65,
                                "cbt": 2.71,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Pishin",
                                "edp": 2.56,
                                "lip": 2.54,
                                "cbt": 2.31,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Zhob",
                                "edp": 2.53,
                                "lip": 2.52,
                                "cbt": 2.81,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Mastung",
                                "edp": 2.51,
                                "lip": 2.65,
                                "cbt": 2.51,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Quetta",
                                "edp": 2.25,
                                "lip": 2.65,
                                "cbt": 2.71,
                                "tvs": 1,
                                "bds": 4.2
                            }]
                        },
                        {
                            "category": "Female",
                            value: 30,
                            subData: [
                                { "category": "EDPs", value: 10 },
                                { "category": "LIPs", value: 20 },
                                { "category": "CBT", value: 5 },
                                { "category": "TVS", value: 17 },
                                { "category": "BDS", value: 6 }
                            ],
                            breakdown: [{
                                "category": "Killa Abdullah",
                                "edp": 2.75,
                                "lip": 2.15,
                                "cbt": 2.41,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Killa Saifullah",
                                "edp": 2.45,
                                "lip": 2.65,
                                "cbt": 2.31,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Sherani",
                                "edp": 2.25,
                                "lip": 2.15,
                                "cbt": 2.51,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Chagai",
                                "edp": 2.56,
                                "lip": 2.57,
                                "cbt": 2.51,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Nushki",
                                "edp": 2.25,
                                "lip": 2.15,
                                "cbt": 26.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Pishin",
                                "edp": 2.85,
                                "lip": 2.75,
                                "cbt": 2.81,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Zhob",
                                "edp": 2.65,
                                "lip": 2.85,
                                "cbt": 2.71,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Mastung",
                                "edp": 2.5,
                                "lip": 2.5,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Quetta",
                                "edp": 2.5,
                                "lip": 2.5,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            }]

                        }, {
                            "category": "Male",
                            value: 21,
                            subData: [
                                { "category": "EDPs", value: 10 },
                                { "category": "LIPs", value: 20 },
                                { "category": "CBT", value: 5 },
                                { "category": "TVS", value: 17 },
                                { "category": "BDS", value: 6 }
                            ],
                            breakdown: [{
                                "category": "Killa Abdullah",
                                "edp": 2.1,
                                "lip": 2.2,
                                "cbt": 2.3,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Killa Saifullah",
                                "edp": 2.1,
                                "lip": 2.2,
                                "cbt": 2.3,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Sherani",
                                "edp": 2.1,
                                "lip": 2.2,
                                "cbt": 2.3,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Chagai",
                                "edp": 2.1,
                                "lip": 2.2,
                                "cbt": 2.3,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Nushki",
                                "edp": 2.2,
                                "lip": 2.3,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Pishin",
                                "edp": 2.5,
                                "lip": 2.2,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Zhob",
                                "edp": 2.25,
                                "lip": 2.53,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Mastung",
                                "edp": 2.52,
                                "lip": 2.25,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Quetta",
                                "edp": 2.45,
                                "lip": 2.55,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            }]
                        }
                    ]

                    newData = pdoi

                    root.dispose();
                    rerender()
                }


                // Applying Filter/Search on the PieOfPie Chart

                console.log("Search Bar");
                const searchInput = document.getElementById('searchInput');

                // Add event listener to execute function on change
                searchInput.addEventListener('keyup', function (event) {
                    const searchTerm = event.target.value;

                    var list = [
                        {
                            "category": "Afghan Refugee",
                            value: 49,
                            subData: [
                                { "category": "EDPs", value: 25500 },
                                { "category": "LIPs", value: 4500 },
                                { "category": "CBT", value: 9360 },
                                { "category": "TVS", value: 12750 },
                                { "category": "BDS", value: 4500 }
                            ],
                            breakdown: [{
                                "category": "Killa Abdullah",
                                "edp": 2.52,
                                "lip": 2.45,
                                "cbt": 2.51,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Killa Saifullah",
                                "edp": 2.25,
                                "lip": 2.45,
                                "cbt": 2.31,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Sherani",
                                "edp": 2.52,
                                "lip": 2.45,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Chagai",
                                "edp": 2.65,
                                "lip": 2.35,
                                "cbt": 24.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Nushki",
                                "edp": 2.25,
                                "lip": 2.65,
                                "cbt": 2.71,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Pishin",
                                "edp": 2.56,
                                "lip": 2.54,
                                "cbt": 2.31,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Zhob",
                                "edp": 2.53,
                                "lip": 2.52,
                                "cbt": 2.81,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Mastung",
                                "edp": 2.51,
                                "lip": 2.65,
                                "cbt": 2.51,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Quetta",
                                "edp": 2.25,
                                "lip": 2.65,
                                "cbt": 2.71,
                                "tvs": 1,
                                "bds": 4.2
                            }]
                        },
                        {
                            "category": "Female",
                            value: 30,
                            subData: [
                                { "category": "EDPs", value: 10 },
                                { "category": "LIPs", value: 20 },
                                { "category": "CBT", value: 5 },
                                { "category": "TVS", value: 17 },
                                { "category": "BDS", value: 6 }
                            ],
                            breakdown: [{
                                "category": "Killa Abdullah",
                                "edp": 2.75,
                                "lip": 2.15,
                                "cbt": 2.41,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Killa Saifullah",
                                "edp": 2.45,
                                "lip": 2.65,
                                "cbt": 2.31,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Sherani",
                                "edp": 2.25,
                                "lip": 2.15,
                                "cbt": 2.51,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Chagai",
                                "edp": 2.56,
                                "lip": 2.57,
                                "cbt": 2.51,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Nushki",
                                "edp": 2.25,
                                "lip": 2.15,
                                "cbt": 26.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Pishin",
                                "edp": 2.85,
                                "lip": 2.75,
                                "cbt": 2.81,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Zhob",
                                "edp": 2.65,
                                "lip": 2.85,
                                "cbt": 2.71,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Mastung",
                                "edp": 2.5,
                                "lip": 2.5,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Quetta",
                                "edp": 2.5,
                                "lip": 2.5,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            }]

                        }, {
                            "category": "Male",
                            value: 21,
                            subData: [
                                { "category": "EDPs", value: 10 },
                                { "category": "LIPs", value: 20 },
                                { "category": "CBT", value: 5 },
                                { "category": "TVS", value: 17 },
                                { "category": "BDS", value: 6 }
                            ],
                            breakdown: [{
                                "category": "Killa Abdullah",
                                "edp": 2.1,
                                "lip": 2.2,
                                "cbt": 2.3,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Killa Saifullah",
                                "edp": 2.1,
                                "lip": 2.2,
                                "cbt": 2.3,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Sherani",
                                "edp": 2.1,
                                "lip": 2.2,
                                "cbt": 2.3,
                                "tvs": 1,
                                "bds": 4.2
                            }, {
                                "category": "Chagai",
                                "edp": 2.1,
                                "lip": 2.2,
                                "cbt": 2.3,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Nushki",
                                "edp": 2.2,
                                "lip": 2.3,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Pishin",
                                "edp": 2.5,
                                "lip": 2.2,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Zhob",
                                "edp": 2.25,
                                "lip": 2.53,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Mastung",
                                "edp": 2.52,
                                "lip": 2.25,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            },
                            {
                                "category": "Quetta",
                                "edp": 2.45,
                                "lip": 2.55,
                                "cbt": 2.1,
                                "tvs": 1,
                                "bds": 4.2
                            }]
                        }
                    ]



                    const filteredList = list.filter(item => {

                        const itemName = item.category.toLowerCase();
                        const lowercasedSearchTerm = searchTerm.toLowerCase();
                        return itemName.includes(lowercasedSearchTerm);
                    });
                    // Execute your search function or any desired action here
                    console.log('Searching for:', filteredList);
                    newData = filteredList
                    i=0;
                    root.dispose();
                    rerender()
                });


                function rerender() {
                    am5.ready(function () {
                        console.log("In Show...", newData);

                        // Create root element
                        // https://www.amcharts.com/docs/v5/getting-started/#Root_element
                        root = am5.Root.new("chartdiv");

                        // Set themes
                        // https://www.amcharts.com/docs/v5/concepts/themes/
                        root.setThemes([am5themes_Animated.new(root)]);

                        var container = root.container.children.push(
                            am5.Container.new(root, {
                                width: am5.p100,
                                height: am5.p100,
                                //y: am5.percent(0),
                                //x: am5.percent(0),
                                layout: root.horizontalLayout
                            })
                        );


                        // ==============================================
                        // Column chart
                        // ==============================================
                        var xxAxis;
                        var sseries;
                        function columnStart(data) {

                            console.log("Dataaaa: ", data)

                            // Create chart
                            // https://www.amcharts.com/docs/v5/charts/xy-chart/
                            var achart = container.children.push(
                                am5xy.XYChart.new(root, {
                                    // panY: false,
                                    wheelY: "zoomX",
                                    wheelX: "zoomY",
                                    //layout: root.verticalLayout
                                    width: am5.percent(150),
                                    height: am5.percent(57),
                                    panX: false,
                                    panY: false,
                                    //centerX: am5.percent(10),
                                    y: am5.percent(45),
                                    x: am5.percent(35),
                                    layout: am5.GridLayout.new(root, {
                                        maxColumns: 2,
                                        fixedWidthGrid: true
                                    })
                                    //layout: root.verticalLayout
                                })
                            );


                            // Create axes
                            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
                            //var xRenderer = am5xy.AxisRendererX.new(root, {});
                            //xxAxis = achart.xAxes.push(am5xy.CategoryAxis.new(root, {
                            //    categoryField: "category",
                            //    renderer: xRenderer,
                            //    tooltip: am5.Tooltip.new(root, {})
                            //}));

                            //xRenderer.grid.template.setAll({
                            //    location: 1
                            //})

                            // Create X-Axis
                            xxAxis = achart.xAxes.push(
                                am5xy.CategoryAxis.new(root, {
                                    maxDeviation: 0.2,
                                    renderer: am5xy.AxisRendererX.new(root, {
                                        minGridDistance: 10
                                    }),
                                    categoryField: "category"
                                })
                            );
                            var xRenderer = xxAxis.get("renderer");
                            xRenderer.labels.template.setAll({
                                rotation: -30,
                                fontSize: 10,
                                centerY: am5.percent(50)
                            });

                            xxAxis.data.setAll(data);

                            // Craete Y-axis
                            let yAxis = achart.yAxes.push(
                                am5xy.ValueAxis.new(root, {
                                    renderer: am5xy.AxisRendererY.new(root, {
                                    })
                                })
                            );

                            //var yAxis = achart.yAxes.push(am5xy.ValueAxis.new(root, {
                            //    min: 0,
                            //    renderer: am5xy.AxisRendererY.new(root, {
                            //        strokeOpacity: 0.1
                            //    })
                            //}));

                            //// Add legend
                            //// https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/
                            //var legend = achart.children.push(am5.Legend.new(root, {
                            //    centerX: am5.p50,
                            //    x: am5.p50
                            //}));


                            // Add legend
                            var legend = achart.children.push(am5.Legend.new(root, {
                                centerY: am5.percent(50),
                                y: am5.percent(50),
                                layout: root.verticalLayout,
                                height: am5.percent(100),
                                verticalScrollbar: am5.Scrollbar.new(root, {
                                    orientation: "vertical"
                                })
                            }));



                            // Add series
                            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/
                            function makeSeries(name, fieldName) {

                                sseries = achart.series.push(am5xy.ColumnSeries.new(root, {
                                    name: name,
                                    stacked: true,
                                    xAxis: xxAxis,
                                    yAxis: yAxis,
                                    valueYField: fieldName,
                                    categoryXField: "category"
                                }));

                                sseries.columns.template.setAll({
                                    tooltipText: "{name}, {categoryX}: {valueY}",
                                    tooltipY: am5.percent(10)
                                });
                                sseries.data.setAll(data);

                                // Make stuff animate on load
                                // https://www.amcharts.com/docs/v5/concepts/animations/
                                //series.appear();


                                sseries.bullets.push(function () {
                                    return am5.Bullet.new(root, {
                                        sprite: am5.Label.new(root, {
                                            //text: "{valueY}",
                                            fill: root.interfaceColors.get("alternativeText"),
                                            centerY: am5.p50,
                                            centerX: am5.p50,
                                            fontSize: 10,
                                            populateText: true
                                        })
                                    });
                                });

                                legend.data.push(sseries);
                                //legend.data.setAll(achart.series.values);
                            }
                            console.log("i: ", i)
                            if (i == 0) {

                                makeSeries("EDPs", "edp");
                                makeSeries("LIPs", "lip");
                                makeSeries("CBT", "cbt");
                                makeSeries("TVS", "tvs");
                                makeSeries("BDS", "bds");


                            }
                            i = 1;

                            //function end

                        }




                        // ==============================================
                        // END Column chart
                        // ==============================================

                        // Create main chart
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                        var chart = container.children.push(
                            am5percent.PieChart.new(root, {
                                tooltip: am5.Tooltip.new(root, {}),
                                radius: am5.percent(150),
                                // innerRadius: am5.percent(10)
                                // panY: false,
                                //wheelY: "zoomX",
                                //wheelX: "zoomY",
                                //layout: root.verticalLayout
                                width: am5.percent(70),
                                height: am5.percent(30),
                                //panX: false,
                                //panY: false,

                                y: am5.percent(10),
                                x: am5.percent(10),
                                layout: am5.GridLayout.new(root, {
                                    maxColumns: 2,
                                    fixedWidthGrid: true
                                })
                                //layout: root.verticalLayout
                            })
                        );

                        var series2 = chart.series.push(
                            am5percent.PieSeries.new(root, {
                                name: "Total",
                                valueField: "beneficiaries",
                                categoryField: "total"
                            })
                        );

                        series2.data.setAll([{
                            total: "Total",
                            beneficiaries: 60000
                        }]);

                        series2.bullets.push(function () {
                            return am5.Bullet.new(root, {
                                sprite: am5.Label.new(root, {
                                    text: "Total: {beneficiaries}",
                                    centerX: am5.percent(50),
                                    centerY: am5.percent(130),
                                    populateText: true,
                                    fill: am5.color(0xffffff)
                                })
                            });
                        });


                        // Configuring slices
                        series2.slices.template.setAll({
                            stroke: am5.color(0xffffff),
                            strokeWidth: 2
                        })

                        series2.labels.template.setAll({
                            // text: "{beneficiaries}",
                            //fontSize: 10,
                            textType: "circular",
                            //inside: true,
                            //centerX: am5.percent(90),
                            radius: 10,
                            fill: am5.color(0xffffff)
                        })

                        // add events
                        //series2.slices.template.events.on("click", function (e) {
                        //    console.log("Series2 Slice", e.target.get("fill"))
                        //    selectSlice(e.target);
                        //    aseries1.columns.template.setAll({
                        //        fill: e.target.get("fill"), //slice
                        //        stroke: e.target.get("fill") //slice
                        //    });

                        //    console.log("DATA: ", e.target.dataItem.dataContext.breakdown)

                        //    aseries1.data.setAll(e.target.dataItem.dataContext.breakdown);
                        //    // yAxis.data.setAll(e.target.dataItem.dataContext.breakdown);
                        //    xAxis.data.setAll(e.target.dataItem.dataContext.breakdown)

                        //    //makeSeries("LIP", "lip");
                        //    //makeSeries("BSF", "bsf");
                        //    //makeSeries("Tech", "tech");
                        //    //makeSeries("Community Training", "ct");
                        //    //currentSlice = e.target;
                        //});

                        //series2.ticks.template.set("visible", false);
                        //series2.slices.template.set("toggleKey", "none");

                        //// Disabling labels and ticks
                        //series2.labels.template.set("visible", false);
                        //series2.ticks.template.set("visible", false);

                        // Create series
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                        var series = chart.series.push(
                            am5percent.PieSeries.new(root, {
                                valueField: "value",
                                categoryField: "category",
                                alignLabels: false,
                            })
                        );

                        //series.labels.template.setAll({
                        //    textType: "circular",
                        //    radius: 4
                        //});

                        series.labels.template.setAll({
                            text: "{category}[/]: [bold]{value}[/]",
                            fontSize: 15,
                            textType: "circular",
                            textAlign: "center",
                            oversizedBehavior: "wrap",
                            inside: true,
                            centerX: am5.percent(90),
                            radius: 10,
                            fill: am5.color(0xffffff)
                        })

                        series.ticks.template.set("visible", false);
                        series.slices.template.set("toggleKey", "none");

                       
                        // add events
                        series.slices.template.events.on("click", function (e) {
                            console.log("Slice", e.target.get("fill"))
                            selectSlice(e.target);
                            if (sseries) {
                                sseries.columns.template.setAll({
                                    fill: e.target.get("fill"), //slice
                                    stroke: e.target.get("fill") //slice
                                });

                            }
                            console.log("IIIIII: ", i)
                            if (i == 0) {
                                console.log("Show the bar")
                                columnStart(e.target.dataItem.dataContext.breakdown)
                            }


                            //sseries.data.setAll(dummy);
                            //// yAxis.data.setAll(e.target.dataItem.dataContext.breakdown);
                            //xxAxis.data.setAll(dummy)
                            ////currentSlice = e.target;
                        });


                        // Create sub chart
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                        var subChart = container.children.push(
                            am5percent.PieChart.new(root, {
                                radius: am5.percent(40),
                                tooltip: am5.Tooltip.new(root, {}),
                                // panY: false,
                                //wheelY: "zoomX",
                                //wheelX: "zoomY",
                                //layout: root.verticalLayout
                                //width: am5.percent(50),
                                //height: am5.percent(30),
                                //panX: false,
                                //panY: false,
                                //centerX: am5.percent(10),
                                y: am5.percent(-25),
                                x: am5.percent(40),
                                //layout: am5.GridLayout.new(root, {
                                //    maxColumns: 2,
                                //    fixedWidthGrid: true
                                //})
                                //layout: root.verticalLayout
                            })
                        );

                        // Create sub series
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                        var subSeries = subChart.series.push(
                            am5percent.PieSeries.new(root, {
                                valueField: "value",
                                categoryField: "category",
                                alignLabels: false
                            })
                        );

                        subSeries.labels.template.setAll({
                            text: "{category}[/]: [bold]{value}[/]",
                            fontSize: 10,
                            oversizedBehavior: "wrap",
                            textAlign: "center",
                            maxWidth: 90,
                            textType: "circular",
                            //inside: true,
                            //centerX: am5.percent(-40),
                            radius: 10,
                            fill: am5.color(0x000000)
                        })


                        subSeries.data.setAll([
                            { category: "A", value: 0 },
                            { category: "B", value: 0 },
                            { category: "C", value: 0 },
                            { category: "D", value: 0 },
                            { category: "E", value: 0 },
                            { category: "F", value: 0 },
                            { category: "G", value: 0 }
                        ]);
                        subSeries.slices.template.set("toggleKey", "none");

                        var selectedSlice;

                        series.on("startAngle", function () {
                            updateLines();
                        });

                        container.events.on("boundschanged", function () {
                            root.events.on("frameended", function () {
                                updateLines();
                            })
                        })

                        function updateLines() {
                            if (selectedSlice) {
                                var startAngle = selectedSlice.get("startAngle");
                                var arc = selectedSlice.get("arc");
                                var radius = selectedSlice.get("radius");

                                var x00 = radius * am5.math.cos(startAngle);
                                var y00 = radius * am5.math.sin(startAngle);

                                var x10 = radius * am5.math.cos(startAngle + arc);
                                var y10 = radius * am5.math.sin(startAngle + arc);

                                var subRadius = subSeries.slices.getIndex(0).get("radius");
                                var x01 = 0;
                                var y01 = -subRadius;

                                var x11 = 0;
                                var y11 = subRadius;

                                var point00 = series.toGlobal({ x: x00, y: y00 });
                                var point10 = series.toGlobal({ x: x10, y: y10 });

                                var point01 = subSeries.toGlobal({ x: x01, y: y01 });
                                var point11 = subSeries.toGlobal({ x: x11, y: y11 });

                                line0.set("points", [point00, point01]);
                                line1.set("points", [point10, point11]);
                            }
                        }

                        // lines
                        var line0 = container.children.push(
                            am5.Line.new(root, {
                                position: "absolute",
                                stroke: root.interfaceColors.get("text"),
                                strokeDasharray: [2, 2]
                            })
                        );
                        var line1 = container.children.push(
                            am5.Line.new(root, {
                                position: "absolute",
                                stroke: root.interfaceColors.get("text"),
                                strokeDasharray: [2, 2]
                            })
                        );

                        // Set data
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data
                        series.data.setAll(
                            newData
                        );


                        function selectSlice(slice) {
                            console.log("SelectedSlice 2: ", selectedSlice)
                            selectedSlice = slice;

                            var dataItem = slice.dataItem;
                            var dataContext = dataItem.dataContext;
                            var checkRefugee = JSON.stringify(dataContext["category"]);

                            console.log(`
                                                                                        Data Context: ${checkRefugee}
                                                                                    `)

                            if (!(refugee == 1 && (checkRefugee.toLowerCase().includes("male") || checkRefugee.toLowerCase().includes("female")))) {
                                console.log("in")
                            }


                            if (dataContext) {
                                var i = 0;

                                subSeries.data.each(function (dataObject) {
                                    var dataObj = dataContext.subData[i];
                                    if (dataObj) {
                                        subSeries.data.setIndex(i, dataObj);
                                        if (!subSeries.dataItems[i].get("visible")) {
                                            subSeries.dataItems[i].show();
                                        }
                                    }
                                    else {
                                        subSeries.dataItems[i].hide();
                                    }

                                    i++;
                                });
                            }

                            var middleAngle = slice.get("startAngle") + slice.get("arc") / 2;
                            var firstAngle = series.dataItems[0].get("slice").get("startAngle");


                            if (!(refugee == 1 && (checkRefugee.toLowerCase().includes("male") || checkRefugee.toLowerCase().includes("female")))) {
                                console.log("OK")
                                refugee == 0;
                                series.animate({
                                    key: "startAngle",
                                    to: firstAngle - middleAngle,
                                    duration: 1000,
                                    easing: am5.ease.out(am5.ease.cubic)
                                });
                                series.animate({
                                    key: "endAngle",
                                    to: firstAngle - middleAngle + 360,
                                    duration: 1000,
                                    easing: am5.ease.out(am5.ease.cubic)
                                });
                            }
                            else {
                                console.log("SelectedSlice 3: ", selectedSlice)
                                selectedSlice = null
                            }
                        }

                        container.appear(1000, 10);

                        series.events.on("datavalidated", function () {
                            selectSlice(series.slices.getIndex(0));
                        });

                    }); // end am5.ready()
                }

            </script>


            <!-- HTML -->
            <div id="chartdiv"></div>


        </div>


</div>


</div>

