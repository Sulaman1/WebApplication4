@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "PieOfPie";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<div class="border border-primary container">
    <div class="row row-cols-2">
        <div class="border border-primary col">

            <h5>PieOfPie</h5>

            <!-- Styles -->
            <style>
                #chartdiv {
                    width: 200%;
                    height: 100%;
                }

            </style>

            <!-- Resources -->

            <input type="text" id="searchInput" placeholder="Search..." />

@*            <button onclick="PartialData()">Partial Data</button>
            <button onclick="AllData()">All Data</button>*@


            <!-- Chart code -->
            <script>

                var newData = []
                var root;
                var initializeData = (function () {
                    var executed = false;
                    console.log("one time")
                    return function () {
                        if (!executed) {
                            executed = true;
                            newData = [
                                {
                                    category: "Killa Abdullah",
                                    value: 1255,
                                    subData: [
                                        { category: "Male Beneficiary", value: 220 },
                                        { category: "Female Beneficiary", value: 735 },
                                        { category: "Male Refugee Beneficiary", value: 52 },
                                        { category: "Female Refugee Beneficiary", value: 248 }
                                    ]
                                },
                                {
                                    category: "Killa Saifullah",
                                    value: 1948,
                                    subData: [
                                        { category: "Male Beneficiary", value: 400 },
                                        { category: "Female Beneficiary", value: 948 },
                                        { category: "Male Refugee Beneficiary", value: 444 },
                                        { category: "Female Refugee Beneficiary", value: 156 }
                                    ]
                                },
                                {
                                    category: "Sherani",
                                    value: 232,
                                    subData: [
                                        { category: "Male Beneficiary", value: 49 },
                                        { category: "Female Beneficiary", value: 183 },
                                        { category: "Male Refugee Beneficiary", value: 0 },
                                        { category: "Female Refugee Beneficiary", value: 0 }
                                    ]
                                },
                                {
                                    category: "Chagai",
                                    value: 2000,
                                    subData: [
                                        { category: "Male Beneficiary", value: 213 },
                                        { category: "Female Beneficiary", value: 787 },
                                        { category: "Male Refugee Beneficiary", value: 787 },
                                        { category: "Female Refugee Beneficiary", value: 213 }
                                    ]
                                },
                                {
                                    category: "Nushki",
                                    value: 648,
                                    subData: [
                                        { category: "Male Beneficiary", value: 159 },
                                        { category: "Female Beneficiary", value: 237 },
                                        { category: "Male Refugee Beneficiary", value: 151 },
                                        { category: "Female Refugee Beneficiary", value: 101 }
                                    ]
                                },
                                {
                                    category: "Pishin",
                                    value: 3584,
                                    subData: [
                                        { category: "Male Beneficiary", value: 624 },
                                        { category: "Female Beneficiary", value: 1539 },
                                        { category: "Male Refugee Beneficiary", value: 1054 },
                                        { category: "Female Refugee Beneficiary", value: 367 }
                                    ]
                                },
                                {
                                    category: "Zhob",
                                    value: 371,
                                    subData: [
                                        { category: "Male Beneficiary", value: 153 },
                                        { category: "Female Beneficiary", value: 218 },
                                        { category: "Male Refugee Beneficiary", value: 0 },
                                        { category: "Female Refugee Beneficiary", value: 0 }
                                    ]
                                },
                                {
                                    category: "Mastung",
                                    value: 600,
                                    subData: [
                                        { category: "Male Beneficiary", value: 131 },
                                        { category: "Female Beneficiary", value: 169 },
                                        { category: "Male Refugee Beneficiary", value: 169 },
                                        { category: "Female Refugee Beneficiary", value: 131 }
                                    ]
                                },
                                {
                                    category: "Quetta",
                                    value: 0,
                                    subData: [
                                        { category: "Male Beneficiary", value: 0 },
                                        { category: "Female Beneficiary", value: 0 },
                                        { category: "Male Refugee Beneficiary", value: 0 },
                                        { category: "Female Refugee Beneficiary", value: 0 }
                                    ]
                                }
                            ];

                            am5.ready(function () {

                                console.log("In Show...", newData);

                                // Create root element
                                // https://www.amcharts.com/docs/v5/getting-started/#Root_element
                                root = am5.Root.new("chartdiv");

                                // Set themes
                                // https://www.amcharts.com/docs/v5/concepts/themes/
                                root.setThemes([am5themes_Animated.new(root)]);

                                var container = root.container.children.push(
                                    am5.Container.new(root, {
                                        width: am5.p50,
                                        height: am5.p50,
                                        layout: root.horizontalLayout
                                    })
                                );

                                // Create main chart
                                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                                var chart = container.children.push(
                                    am5percent.PieChart.new(root, {
                                        tooltip: am5.Tooltip.new(root, {})
                                    })
                                );

                                // Create series
                                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                                var series = chart.series.push(
                                    am5percent.PieSeries.new(root, {
                                        valueField: "value",
                                        categoryField: "category",
                                        alignLabels: false
                                    })
                                );

                                //series.labels.template.setAll({
                                //    textType: "circular",
                                //    radius: 4
                                //});

                                series.labels.template.setAll({
                                    text: "{category}",
                                    fontSize: 10,
                                    textType: "radial",
                                    inside: true,
                                    centerX: am5.percent(90),
                                    radius: 10,
                                    fill: am5.color(0xffffff)
                                })

                                series.ticks.template.set("visible", false);
                                series.slices.template.set("toggleKey", "none");

                                // add events
                                series.slices.template.events.on("click", function (e) {
                                    selectSlice(e.target);
                                });

                                // Create sub chart
                                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                                var subChart = container.children.push(
                                    am5percent.PieChart.new(root, {
                                        radius: am5.percent(50),
                                        tooltip: am5.Tooltip.new(root, {})
                                    })
                                );

                                // Create sub series
                                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                                var subSeries = subChart.series.push(
                                    am5percent.PieSeries.new(root, {
                                        valueField: "value",
                                        categoryField: "category",
                                        alignLabels: false
                                    })
                                );

                           
                                subSeries.labels.template.setAll({
                                    text: "{category}",
                                    fontSize: 10,
                                    textType: "radial",
                                    inside: true,
                                    centerX: am5.percent(30),
                                    radius: 10,
                                    fill: am5.color(0x000000)
                                })

                                subSeries.data.setAll([
                                    { category: "A", value: 0 },
                                    { category: "B", value: 0 },
                                    { category: "C", value: 0 },
                                    { category: "D", value: 0 },
                                    { category: "E", value: 0 },
                                    { category: "F", value: 0 },
                                    { category: "G", value: 0 }
                                ]);
                                subSeries.slices.template.set("toggleKey", "none");

                                var selectedSlice;

                                series.on("startAngle", function () {
                                    updateLines();
                                });

                                container.events.on("boundschanged", function () {
                                    root.events.on("frameended", function () {
                                        updateLines();
                                    })
                                })

                                function updateLines() {
                                    if (selectedSlice) {
                                        var startAngle = selectedSlice.get("startAngle");
                                        var arc = selectedSlice.get("arc");
                                        var radius = selectedSlice.get("radius");

                                        var x00 = radius * am5.math.cos(startAngle);
                                        var y00 = radius * am5.math.sin(startAngle);

                                        var x10 = radius * am5.math.cos(startAngle + arc);
                                        var y10 = radius * am5.math.sin(startAngle + arc);

                                        var subRadius = subSeries.slices.getIndex(0).get("radius");
                                        var x01 = 0;
                                        var y01 = -subRadius;

                                        var x11 = 0;
                                        var y11 = subRadius;

                                        var point00 = series.toGlobal({ x: x00, y: y00 });
                                        var point10 = series.toGlobal({ x: x10, y: y10 });

                                        var point01 = subSeries.toGlobal({ x: x01, y: y01 });
                                        var point11 = subSeries.toGlobal({ x: x11, y: y11 });

                                        line0.set("points", [point00, point01]);
                                        line1.set("points", [point10, point11]);
                                    }
                                }

                                // lines
                                var line0 = container.children.push(
                                    am5.Line.new(root, {
                                        position: "absolute",
                                        stroke: root.interfaceColors.get("text"),
                                        strokeDasharray: [2, 2]
                                    })
                                );
                                var line1 = container.children.push(
                                    am5.Line.new(root, {
                                        position: "absolute",
                                        stroke: root.interfaceColors.get("text"),
                                        strokeDasharray: [2, 2]
                                    })
                                );

                                // Set data
                                // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data
                                series.data.setAll(
                                    newData
                                );

                                function selectSlice(slice) {
                                    selectedSlice = slice;
                                    var dataItem = slice.dataItem;
                                    var dataContext = dataItem.dataContext;

                                    if (dataContext) {
                                        var i = 0;
                                        subSeries.data.each(function (dataObject) {
                                            var dataObj = dataContext.subData[i];
                                            if (dataObj) {
                                                subSeries.data.setIndex(i, dataObj);
                                                if (!subSeries.dataItems[i].get("visible")) {
                                                    subSeries.dataItems[i].show();
                                                }
                                            }
                                            else {
                                                subSeries.dataItems[i].hide();
                                            }

                                            i++;
                                        });
                                    }

                                    var middleAngle = slice.get("startAngle") + slice.get("arc") / 2;
                                    var firstAngle = series.dataItems[0].get("slice").get("startAngle");

                                    series.animate({
                                        key: "startAngle",
                                        to: firstAngle - middleAngle,
                                        duration: 1000,
                                        easing: am5.ease.out(am5.ease.cubic)
                                    });
                                    series.animate({
                                        key: "endAngle",
                                        to: firstAngle - middleAngle + 360,
                                        duration: 1000,
                                        easing: am5.ease.out(am5.ease.cubic)
                                    });
                                }

                                container.appear(1000, 10);

                                series.events.on("datavalidated", function () {
                                    selectSlice(series.slices.getIndex(0));
                                });

                            }); // end am5.ready()

                        }
                    };
                })();
                
                //It Will Initialize the data on Page Load and would never be called again...
                initializeData();                       



                // Applying Filter/Search on the PieOfPie Chart

                console.log("Search Bar");
                const searchInput = document.getElementById('searchInput');

                // Add event listener to execute function on change
                searchInput.addEventListener('keyup', function (event) {                   
                    const searchTerm = event.target.value;

                    var list = [
                        {
                            category: "Killa Abdullah",
                            value: 1255,
                            subData: [
                                { category: "Male Beneficiary", value: 220 },
                                { category: "Female Beneficiary", value: 735 },
                                { category: "Male Refugee Beneficiary", value: 52 },
                                { category: "Female Refugee Beneficiary", value: 248 }
                            ]
                        },
                        {
                            category: "Killa Saifullah",
                            value: 1948,
                            subData: [
                                { category: "Male Beneficiary", value: 400 },
                                { category: "Female Beneficiary", value: 948 },
                                { category: "Male Refugee Beneficiary", value: 444 },
                                { category: "Female Refugee Beneficiary", value: 156 }
                            ]
                        },
                        {
                            category: "Sherani",
                            value: 232,
                            subData: [
                                { category: "Male Beneficiary", value: 49 },
                                { category: "Female Beneficiary", value: 183 },
                                { category: "Male Refugee Beneficiary", value: 0 },
                                { category: "Female Refugee Beneficiary", value: 0 }
                            ]
                        },
                        {
                            category: "Chagai",
                            value: 2000,
                            subData: [
                                { category: "Male Beneficiary", value: 213 },
                                { category: "Female Beneficiary", value: 787 },
                                { category: "Male Refugee Beneficiary", value: 787 },
                                { category: "Female Refugee Beneficiary", value: 213 }
                            ]
                        },
                        {
                            category: "Nushki",
                            value: 648,
                            subData: [
                                { category: "Male Beneficiary", value: 159 },
                                { category: "Female Beneficiary", value: 237 },
                                { category: "Male Refugee Beneficiary", value: 151 },
                                { category: "Female Refugee Beneficiary", value: 101 }
                            ]
                        },
                        {
                            category: "Pishin",
                            value: 3584,
                            subData: [
                                { category: "Male Beneficiary", value: 624 },
                                { category: "Female Beneficiary", value: 1539 },
                                { category: "Male Refugee Beneficiary", value: 1054 },
                                { category: "Female Refugee Beneficiary", value: 367 }
                            ]
                        },
                        {
                            category: "Zhob",
                            value: 371,
                            subData: [
                                { category: "Male Beneficiary", value: 153 },
                                { category: "Female Beneficiary", value: 218 },
                                { category: "Male Refugee Beneficiary", value: 0 },
                                { category: "Female Refugee Beneficiary", value: 0 }
                            ]
                        },
                        {
                            category: "Mastung",
                            value: 600,
                            subData: [
                                { category: "Male Beneficiary", value: 131 },
                                { category: "Female Beneficiary", value: 169 },
                                { category: "Male Refugee Beneficiary", value: 169 },
                                { category: "Female Refugee Beneficiary", value: 131 }
                            ]
                        },
                        {
                            category: "Quetta",
                            value: 0,
                            subData: [
                                { category: "Male Beneficiary", value: 0 },
                                { category: "Female Beneficiary", value: 0 },
                                { category: "Male Refugee Beneficiary", value: 0 },
                                { category: "Female Refugee Beneficiary", value: 0 }
                            ]
                        }
                    ];

                    const filteredList = list.filter(item => {
                        
                        const itemName = item.category.toLowerCase();
                        const lowercasedSearchTerm = searchTerm.toLowerCase();
                        return itemName.includes(lowercasedSearchTerm);
                    });
                    // Execute your search function or any desired action here
                    console.log('Searching for:', filteredList);
                    newData = filteredList
                    root.dispose();
                    rerender()
                });
          
                
                function rerender(){
                    am5.ready(function () {

                        console.log("In Show...", newData);

                        // Create root element
                        // https://www.amcharts.com/docs/v5/getting-started/#Root_element
                        root = am5.Root.new("chartdiv");

                        // Set themes
                        // https://www.amcharts.com/docs/v5/concepts/themes/
                        root.setThemes([am5themes_Animated.new(root)]);

                        var container = root.container.children.push(
                            am5.Container.new(root, {
                                width: am5.p50,
                                height: am5.p50,
                                layout: root.horizontalLayout
                            })
                        );

                        // Create main chart
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                        var chart = container.children.push(
                            am5percent.PieChart.new(root, {
                                tooltip: am5.Tooltip.new(root, {})
                            })
                        );

                        // Create series
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                        var series = chart.series.push(
                            am5percent.PieSeries.new(root, {
                                valueField: "value",
                                categoryField: "category",
                                alignLabels: false
                            })
                        );

                        //series.labels.template.setAll({
                        //    textType: "circular",
                        //    radius: 4
                        //});

                        series.labels.template.setAll({
                            text: "{category}",
                            fontSize: 10,
                            textType: "radial",
                            inside: true,
                            centerX: am5.percent(90),
                            radius: 10,
                            fill: am5.color(0xffffff)
                        })

                        series.ticks.template.set("visible", false);
                        series.slices.template.set("toggleKey", "none");

                        // add events
                        series.slices.template.events.on("click", function (e) {
                            selectSlice(e.target);
                        });

                        // Create sub chart
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                        var subChart = container.children.push(
                            am5percent.PieChart.new(root, {
                                radius: am5.percent(50),
                                tooltip: am5.Tooltip.new(root, {})
                            })
                        );

                        // Create sub series
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                        var subSeries = subChart.series.push(
                            am5percent.PieSeries.new(root, {
                                valueField: "value",
                                categoryField: "category",
                                alignLabels: false
                            })
                        );
                    
                        subSeries.labels.template.setAll({
                            text: "{category}",
                            fontSize: 10,
                            textType: "radial",
                            inside: true,
                            centerX: am5.percent(30),
                            radius: 10,
                            fill: am5.color(0x000000)
                        })

                        subSeries.data.setAll([
                            { category: "A", value: 0 },
                            { category: "B", value: 0 },
                            { category: "C", value: 0 },
                            { category: "D", value: 0 },
                            { category: "E", value: 0 },
                            { category: "F", value: 0 },
                            { category: "G", value: 0 }
                        ]);
                        subSeries.slices.template.set("toggleKey", "none");

                        var selectedSlice;

                        series.on("startAngle", function () {
                            updateLines();
                        });

                        container.events.on("boundschanged", function () {
                            root.events.on("frameended", function () {
                                updateLines();
                            })
                        })

                        function updateLines() {
                            if (selectedSlice) {
                                var startAngle = selectedSlice.get("startAngle");
                                var arc = selectedSlice.get("arc");
                                var radius = selectedSlice.get("radius");

                                var x00 = radius * am5.math.cos(startAngle);
                                var y00 = radius * am5.math.sin(startAngle);

                                var x10 = radius * am5.math.cos(startAngle + arc);
                                var y10 = radius * am5.math.sin(startAngle + arc);

                                var subRadius = subSeries.slices.getIndex(0).get("radius");
                                var x01 = 0;
                                var y01 = -subRadius;

                                var x11 = 0;
                                var y11 = subRadius;

                                var point00 = series.toGlobal({ x: x00, y: y00 });
                                var point10 = series.toGlobal({ x: x10, y: y10 });

                                var point01 = subSeries.toGlobal({ x: x01, y: y01 });
                                var point11 = subSeries.toGlobal({ x: x11, y: y11 });

                                line0.set("points", [point00, point01]);
                                line1.set("points", [point10, point11]);
                            }
                        }

                        // lines
                        var line0 = container.children.push(
                            am5.Line.new(root, {
                                position: "absolute",
                                stroke: root.interfaceColors.get("text"),
                                strokeDasharray: [2, 2]
                            })
                        );
                        var line1 = container.children.push(
                            am5.Line.new(root, {
                                position: "absolute",
                                stroke: root.interfaceColors.get("text"),
                                strokeDasharray: [2, 2]
                            })
                        );

                        // Set data
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data
                        series.data.setAll(
                            newData
                        );

                        function selectSlice(slice) {
                            selectedSlice = slice;
                            var dataItem = slice.dataItem;
                            var dataContext = dataItem.dataContext;

                            if (dataContext) {
                                var i = 0;
                                subSeries.data.each(function (dataObject) {
                                    var dataObj = dataContext.subData[i];
                                    if (dataObj) {
                                        subSeries.data.setIndex(i, dataObj);
                                        if (!subSeries.dataItems[i].get("visible")) {
                                            subSeries.dataItems[i].show();
                                        }
                                    }
                                    else {
                                        subSeries.dataItems[i].hide();
                                    }

                                    i++;
                                });
                            }

                            var middleAngle = slice.get("startAngle") + slice.get("arc") / 2;
                            var firstAngle = series.dataItems[0].get("slice").get("startAngle");

                            series.animate({
                                key: "startAngle",
                                to: firstAngle - middleAngle,
                                duration: 1000,
                                easing: am5.ease.out(am5.ease.cubic)
                            });
                            series.animate({
                                key: "endAngle",
                                to: firstAngle - middleAngle + 360,
                                duration: 1000,
                                easing: am5.ease.out(am5.ease.cubic)
                            });
                        }

                        container.appear(1000, 10);

                        series.events.on("datavalidated", function () {
                            selectSlice(series.slices.getIndex(0));
                        });

                    }); // end am5.ready()                   
                }     
         
            </script>

            <!-- HTML -->
            <div id="chartdiv"></div>          

        </div>
   
        <div class="border border-primary col">

        <!-- Styles -->
        <style>
            #myChart {
                width: 200%;
                height: 10%;
            }

        </style>
        <div>
            <canvas id="myChart"></canvas>
        </div>

        <script>
            const ctx = document.getElementById('myChart');

            const data = {
                labels: [
                        'Total Beneficiaries',
                        'Number of Community Based Trainings',
                        'Individual Supported through LIPs',
                        'Establishment of Community Based Platforms'
                        
                ],
                /**
                     * 'Killa Abdullah',
                            'Killa Saifullah',
                            'Sherani',
                            'Chagai',
                            'Nushki',
                            'Pishin',
                            'Zhob',
                            'Mastung',
                            'Quetta'
                 */
                    //data: [1255, 1948, 232, 2000, 648,3584, 371, 600, 0],
                    //'rgb(54, 162, 235)',
                   /**
                     * 'rgb(54, 162, 235)',
                         'rgb(255, 232, 0)',
                         'rgb(112, 60, 78)',
                         'rgb(122, 245, 46)',
                         'rgb(29, 92, 161)'
                    */
                datasets: [{
                    label: 'Polar Graph',
                    data: [12.82, 4.49, 90.69, 22.71],
                    borderWidth: 0,
                    backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(75, 192, 192)',
                        'rgb(255, 205, 86)',
                        'rgb(201, 203, 207)'
                  
                    ],
                    hoverBackgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(75, 192, 192)',
                        'rgb(255, 205, 86)',
                        'rgb(201, 203, 207)'
                    ]
                }]
            };

            var polarChart = new Chart(ctx, {
                type: 'polarArea',
                data: data,
                options: {
                    scale: {
                        ticks: {
                            display: true,
                            stepSize: 10
                        }
                    },
                    legend: {
                        position: "bottom",
                        labels: {
                            boxWidth: 11,
                            fontColor: "#757681",
                            fontSize: 11
                        }
                    }
                }
            });

        </script>

    </div>
    </div>


    <div class="row row-cols-2">
        <div class="border border-primary col">
               <!-- Styles -->
                <style>
                    #chartdiv3 {
                        width: 100%;
                        height: 300px;
                    }
                </style>

                <!-- Chart code -->
                <script>
                    am5.ready(function () {

                        // Create root element
                        // https://www.amcharts.com/docs/v5/getting-started/#Root_element
                        var root = am5.Root.new("chartdiv3");

                        // Set themes
                        // https://www.amcharts.com/docs/v5/concepts/themes/
                        root.setThemes([
                            am5themes_Animated.new(root)
                        ]);

                        // Create chart
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
                        // start and end angle must be set both for chart and series
                        var chart = root.container.children.push(am5percent.PieChart.new(root, {
                            layout: root.verticalLayout,
                            radius: am5.percent(100)
                        }));

                        // Create series
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
                        // start and end angle must be set both for chart and series
                        var series0 = chart.series.push(am5percent.PieSeries.new(root, {
                        valueField: "population", //population
                            categoryField: "year", //year
                            alignLabels: false,
                            radius: am5.percent(80),
                            innerRadius: am5.percent(25)
                        }));

                        var bgColor = root.interfaceColors.get("background");

                        series0.ticks.template.setAll({ forceHidden: true });

                        series0.labels.template.setAll({
                            radius: -10,
                            text: "{category}",
                            textType: "radial",
                            centerX: am5.percent(100)
                        });

                        series0.slices.template.setAll({
                            stroke: bgColor,
                            strokeWidth: 2,
                            fill: am5.color(0xaaaaaa),
                            tooltipText:
                                "{category}: {valuePercentTotal.formatNumber('0.00')}% ({value} bottles)"
                        });
                        series0.slices.template.states.create("hover", { scale: 0.95 });

                        var series1 = chart.series.push(am5percent.PieSeries.new(root, {
                        valueField: "population", //population
                            categoryField: "country", //country
                            alignLabels: false,
                            innerRadius: am5.percent(80),
                            radius: am5.percent(100)
                        }));

                        series1.slices.template.setAll({
                            stroke: bgColor,
                            strokeWidth: 2,
                            templateField: "settings"
                        });

                        series1.labels.template.setAll({
                            text: "{category}"
                        });

                        //var data = {
                        //    "2019":[
                        //    { district: "Killa Abdullah", beneficiaries: 387, settings: { fill: am5.color(0x1E3888) } },
                        //    { district: "Killa Saifullah", beneficiaries: 134, settings: { fill: am5.color(0xaaaaaa) } },
                        //    { district: "Sherani", beneficiaries: 37, settings: { fill: am5.color(0x9C3848) } },
                            
                        //    ],
                        //    "2020":[
                           
                        //    { district: "Chagai", beneficiaries: 83, settings: { fill: am5.color(0x1E3888) } },
                        //    { district: "Nushki", beneficiaries: 407, settings: { fill: am5.color(0x1E3888) } },
                           
                        //],
                        //"2021": [
                            
                            
                        //    { district: "Pishin", beneficiaries: 127, settings: { fill: am5.color(0x1E3888) } },
                            
                        //],
                        //"2022": [
                            
                        //    { district: "Zhob", beneficiaries: 117, settings: { fill: am5.color(0x1E3888) } },
                        //    { district: "Mastung", beneficiaries: 187, settings: { fill: am5.color(0x1E3888) } },
                        //    { district: "Quetta", beneficiaries: 332, settings: { fill: am5.color(0x1E3888) } },
                        //],
                        //};

                        var data = {
                            "1957": [
                                { country: "Belgium", population: 11589623, settings: { fill: am5.color(0x1E3888) } },
                                { country: "France", population: 67413000, settings: { fill: am5.color(0xaaaaaa) } },
                                { country: "Germany", population: 83190556, settings: { fill: am5.color(0x9C3848) } },
                                { country: "Italy", population: 60359546, settings: { fill: am5.color(0xaaaaaa) } },
                                { country: "Luxembourg", population: 626108, settings: { fill: am5.color(0xaaaaaa) } },
                                { country: "Netherlands", population: 17479000, settings: { fill: am5.color(0xaaaaaa) } }
                            ],
                            "1973": [
                                { country: "Denmark", population: 5806081, settings: { fill: am5.color(0x1E3888) } },
                                { country: "Ireland", population: 4948200, settings: { fill: am5.color(0xaaaaaa) } },
                                { country: "United Kingdom", population: 66647112, settings: { fill: am5.color(0x47A8BD) } }
                            ],
                            "1981": [
                                { country: "Greece", population: 10724599, settings: { fill: am5.color(0x1E3888) } }
                            ],
                            "1986": [
                                { country: "Portugal", population: 10196707, settings: { fill: am5.color(0x1E3888) } },
                                { country: "Spain", population: 46722980, settings: { fill: am5.color(0x1E3888) } }
                            ],
                            "1995": [
                                { country: "Austria", population: 8902600, settings: { fill: am5.color(0x1E3888) } },
                                { country: "Finland", population: 5523231, settings: { fill: am5.color(0x47A8BD) } },
                                { country: "Sweden", population: 10379295, settings: { fill: am5.color(0x1E3888) } }
                            ],
                            "2004": [
                                { country: "Cyprus", population: 1207359, settings: { fill: am5.color(0x1E3888) } },
                                { country: "Czech Republic", population: 10708981, settings: { fill: am5.color(0x1E3888) } },
                                { country: "Estonia", population: 1328976, settings: { fill: am5.color(0xaaaaaa) } },
                                { country: "Hungary", population: 9771000, settings: { fill: am5.color(0xaaaaaa) } },
                                { country: "Latvia", population: 1901548, settings: { fill: am5.color(0x47A8BD) } },
                                { country: "Lithuania", population: 2790844, settings: { fill: am5.color(0xaaaaaa) } },
                                { country: "Malta", population: 514564, settings: { fill: am5.color(0xaaaaaa) } },
                                { country: "Poland", population: 37846755, settings: { fill: am5.color(0x1E3888) } },
                                { country: "Slovakia", population: 5459642, settings: { fill: am5.color(0x47A8BD) } },
                                { country: "Slovenia", population: 2073894, settings: { fill: am5.color(0xaaaaaa) } }
                            ],
                            "2007": [
                                { country: "Bulgaria", population: 6971487, settings: { fill: am5.color(0x1E3888) } },
                                { country: "Romania", population: 19286123, settings: { fill: am5.color(0x9C3848) } }
                            ]
                        };

                        // Generate series data
                        var innerData = [];
                        var outerData = [];
                        am5.object.each(data, function (year, countries) {
                            var population = 0;
                            am5.array.each(countries, function (country) {
                                population += country.population;
                                outerData.push(country);
                            });
                            innerData.push({
                                year: year,
                                population: population
                            });
                        });


                        // Set data
                        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data
                        series0.data.setAll(innerData);
                        series1.data.setAll(outerData);

                        // Play initial series animation
                        // https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series
                        series0.appear(1000, 100);
                        series1.appear(1000, 100);

                    }); // end am5.ready()
                </script>

                <!-- HTML -->
                <div id="chartdiv3"></div>
        </div>

        <div class="border border-primary col">
            <div>
                <canvas id="barChart"></canvas>
            </div>

            <script>

                const barChart = document.getElementById('barChart');
                new Chart(barChart, {
                    type: 'bar',
                    data: {
                        labels: [
                            'Killa Abdullah',
                            'Killa Saifullah',
                            'Sherani',
                            'Chagai',
                            'Nushki',
                            'Pishin',
                            'Zhob',
                            'Mastung',
                            'Quetta'
                        ],
                        datasets: [{
                            label: '# of Beneficiaries',
                            data: [1255, 1948, 232, 2000, 648, 3584, 371, 600, 0],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });

            </script>
        </div>
    </div>

    <div class="row row-cols-2">
        <div class="border border-dark col">
            <style>
                #myStakeChart {
                    height: 200%;

                   /* max-width: 100%;
                    margin: 20px auto;*/

                }

                .search-container {
                    max-width: 600px;
                    margin: 0 auto;
                    padding: 10px;
                }
            </style>
      

            <canvas id="myStakeChart"></canvas>
          
            <script>
                var stakedata = {
                    labels: ["January", "February", "March", "April", "May"],
                    datasets: [
                        {
                            label: "Dataset 1",
                            data: [30, 40, 10, 50, 20],
                            backgroundColor: "rgba(75, 192, 192, 0.5)"
                        },
                        {
                            label: "Dataset 2",
                            data: [20, 10, 30, 40, 50],
                            backgroundColor: "rgba(255, 99, 132, 0.5)"
                        },
                        {
                            label: "Dataset 3",
                            data: [50, 20, 40, 30, 10],
                            backgroundColor: "rgba(54, 162, 235, 0.5)"
                        }
                    ]
                };

                var filteredData = JSON.parse(JSON.stringify(stakedata));

                // Chart options
                var stakeoptions = {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            stacked: true,
                        },
                        y: {
                            stacked: true,
                            beginAtZero: true
                        }
                    }
                };

                // Create the chart
                var stakectx = document.getElementById("myStakeChart").getContext("2d");

                // Data for the chart
                var mystakeChart = new Chart(stakectx, {
                    type: "bar",
                    data: stakedata,
                    options: stakeoptions
                });

              

                // Search functionality
                var searchInput2 = document.getElementById("searchInput2");
                searchInput2.addEventListener("input", function () {
                    var searchQuery = searchInput2.value.trim().toLowerCase();
                    filteredData.labels = originalData.labels.filter(function (label) {
                        return label.toLowerCase().includes(searchQuery);
                    });
                    filteredData.datasets = originalData.datasets.map(function (dataset) {
                        var filteredDataset = {
                            label: dataset.label,
                            backgroundColor: dataset.backgroundColor,
                            data: []
                        };
                        for (var i = 0; i < originalData.labels.length; i++) {
                            if (filteredData.labels.includes(originalData.labels[i])) {
                                filteredDataset.data.push(dataset.data[i]);
                            }
                        }
                        return filteredDataset;
                    });

                    mystakeChart.update();
                });


            </script>

           @* <div class="search-container">
                <input type="text" id="searchInput2" placeholder="Search by label">
            </div>*@
        </div>
        
    </div>
</div>

