@*@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<!-- Styles -->
<style>
    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>

<!-- Resources -->
<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>


<!-- Chart code -->
<script>

    var barData = [{
                "category": "Killa Abdullah",
                "male": 52,
                "female": 45,
                "refugee": 13,
                "total": 110


            }, {
                "category": "Killa Saifullah",
                "male": 25,
                "female": 45,
                "refugee": 15,
                "total": 85

            }, {
                "category": "Sherani",
                "male": 32,
                "female": 5,
                "refugee": 13,
                "total": 50 

            }, {
                "category": "Chagai",
                "male": 15,
                "female": 35,
                "refugee": 15,
                "total": 65

            },
            {
                "category": "Nushki",
                "male": 72,
                "female": 13,
                "refugee": 25,
                "total": 110 

            },
            {
                "category": "Pishin",
                "male": 32,
                "female": 24,
                "refugee": 34,
                "total": 90

            },
            {
                "category": "Zhob",
                "male": 53,
                "female": 55,
                "refugee": 22,
                "total": 130

            },
            {
                "category": "Mastung",
                "male": 21,
                "female": 65,
                "refugee": 44,
                "total": 130 

            },
            {
                "category": "Quetta",
                "male": 5,
                "female": 5,
                "refugee": 9,
                "total": 19

            }]

    var root;
    var initializeData = (function () {

        var executed = false;
        console.log("one time")
        return function () {
            if (!executed) {
                executed = true;
                rerender()
            }
        };
    })();
    initializeData()

    function rerender(){
        am5.ready(function () {


            // Create root element
            // https://www.amcharts.com/docs/v5/getting-started/#Root_element
            root = am5.Root.new("chartdiv");


            var myTheme = am5.Theme.new(root);

            myTheme.rule("Grid", ["base"]).setAll({
                strokeOpacity: 0.1
            });


            // Set themes
            // https://www.amcharts.com/docs/v5/concepts/themes/
            root.setThemes([
                am5themes_Animated.new(root),
                myTheme
            ]);

            // Create chart
            // https://www.amcharts.com/docs/v5/charts/xy-chart/
            var chart = root.container.children.push(am5xy.XYChart.new(root, {
                //panX: false,
                //panY: false,
                //wheelX: "panY",
                //wheelY: "zoomY",
                layout: root.verticalLayout
            }));

            // Add scrollbar
            // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/
            //chart.set("scrollbarY", am5.Scrollbar.new(root, {
            //    orientation: "vertical"
            //}));

            // Create axes
            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
            var yRenderer = am5xy.AxisRendererY.new(root, {});
            var yAxis = chart.yAxes.push(am5xy.CategoryAxis.new(root, {
                categoryField: "category",
                renderer: yRenderer,
                tooltip: am5.Tooltip.new(root, {})
            }));

            yRenderer.grid.template.setAll({
                location: 1
            })

            yAxis.data.setAll(barData);

            var xAxis = chart.xAxes.push(am5xy.ValueAxis.new(root, {
                min: 0,
                renderer: am5xy.AxisRendererX.new(root, {
                    strokeOpacity: 0.1
                })
            }));

            // Add legend
            // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/
            var legend = chart.children.push(am5.Legend.new(root, {
                centerX: am5.p50,
                x: am5.p50
            }));


            // Add series
            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/
            function makeSeries(name, fieldName) {
                var series = chart.series.push(am5xy.ColumnSeries.new(root, {
                    name: name,
                    stacked: true,
                    xAxis: xAxis,
                    yAxis: yAxis,
                    //width: am5.percent(100),
                    //height: am5.percent(25),
                    //panX: false,
                    //panY: false,
                    //centerX: am5.percent(10),
                    //y: am5.percent(50),
                    //x: am5.percent(15),
                    baseAxis: yAxis,
                    valueXField: fieldName,
                    categoryYField: "category"
                }));

                series.columns.template.setAll({
                    tooltipText: "{name}, {categoryY}: {valueX}",
                    tooltipY: am5.percent(90)
                });
                series.data.setAll(barData);

                // Make stuff animate on load
                // https://www.amcharts.com/docs/v5/concepts/animations/
                series.appear();

                series.bullets.push(function () {
                    return am5.Bullet.new(root, {
                        sprite: am5.Label.new(root, {
                            text: "{valueX}",
                            fill: root.interfaceColors.get("alternativeText"),
                            centerY: am5.p50,
                            centerX: am5.p50,
                            populateText: true
                        })
                    });
                });

                legend.data.push(series);
            }

            makeSeries("Male", "male");
            makeSeries("Female", "female")
            makeSeries("Refugee", "refugee")
            makeSeries("Total", "total")

            // Make stuff animate on load
            // https://www.amcharts.com/docs/v5/concepts/animations/
            chart.appear(1000, 100);



        }); // end am5.ready()


    }

            
    function clicked(e){
        console.log("Clicked", e)
        barData = [{
            "category": "Killa Abdullah",
            "male": 22,
            "female": 25,
            "refugee": 13,
            "total": 110


        }, {
            "category": "Killa Saifullah",
            "male": 25,
            "female": 45,
            "refugee": 15,
            "total": 85

        }, {
            "category": "Sherani",
            "male": 32,
            "female": 5,
            "refugee": 13,
            "total": 50

        }, {
            "category": "Chagai",
            "male": 15,
            "female": 35,
            "refugee": 15,
            "total": 65

        },
        {
            "category": "Nushki",
            "male": 72,
            "female": 13,
            "refugee": 25,
            "total": 110

        },
        {
            "category": "Pishin",
            "male": 32,
            "female": 24,
            "refugee": 34,
            "total": 90

        },
        {
            "category": "Zhob",
            "male": 53,
            "female": 55,
            "refugee": 22,
            "total": 130

        },
        {
            "category": "Mastung",
            "male": 21,
            "female": 65,
            "refugee": 44,
            "total": 130

        },
        {
            "category": "Quetta",
            "male": 5,
            "female": 5,
            "refugee": 9,
            "total": 19

        }]
        root.dispose();
        rerender()
        columnStart(barData)
    }
</script>

<div class="container">
    <div class="row">
        <div class="col-lg-2 " style="height:500px"></div>
        <div class="col-lg-2">
            <div class="card" style="width:100%; cursor: pointer;" onclick="clicked('tb')">
                <div class="card-body">
                    <h5 class="card-title">Total Beneficiaries</h5>
                    <p class="card-text">Numbers: 60000</p>
                    <p class="card-text">Percentage: 100%</p>
                    @*<a href="#" class="btn btn-primary">Go somewhere</a>*@
                </div>
            </div>
            <div class="card" style="width:100%; cursor: pointer;" onclick="clicked('lip')">
                <div class="card-body">
                    <h5 class="card-title">LIPs</h5>
                    <p class="card-text">Numbers: 2000</p>
                    <p class="card-text">Percentage: 100%</p>
                    @*<a href="#" class="btn btn-primary">Go somewhere</a>*@
                </div>
            </div>
            <div class="card" style="width:100%; cursor: pointer;" onclick="clicked('cbt')">
                <div class="card-body">
                    <h5 class="card-title">CBT</h5>
                    <p class="card-text">Numbers: 1000</p>
                    <p class="card-text">Percentage: 100%</p>
                    @*<a href="#" class="btn btn-primary">Go somewhere</a>*@
                </div>
            </div>
            <div class="card" style="width:100%; cursor: pointer;" onclick="clicked('ebp')">
                <div class="card-body">
                    <h5 class="card-title">EBP</h5>
                    <p class="card-text">Numbers: 500</p>
                    <p class="card-text">Percentage: 100%</p>
                    @*<a href="#" class="btn btn-primary">Go somewhere</a>*@
                </div>
            </div>
        </div>
        <div class="col" id="chartdiv"></div>

    </div>

</div>
<!-- HTML -->