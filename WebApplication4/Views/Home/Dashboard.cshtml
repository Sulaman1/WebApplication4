@*@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<!-- Styles -->
<style>
    #chartdiv {
        /*width: 100%;*/
        height: 500px;
    }
</style>

<!-- Resources -->
<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>


<!-- Chart code -->
<script>
    var allLegends
    var root

    var data = [{
        "category": "Killa Abdullah",
        "male": 52,
        "female": 45,
        "refugee male": 13,
        "refugee female": 13,
        "total": 110


    }, {
        "category": "Killa Saifullah",
        "male": 25,
        "female": 45,
        "refugee male": 15,
        "refugee female": 15,
        "total": 85

    }, {
        "category": "Sherani",
        "male": 32,
        "female": 5,
        "refugee male": 13,
        "refugee female": 13,
        "total": 50

    }, {
        "category": "Chagai",
        "male": 15,
        "female": 35,
        "refugee male": 15,
        "refugee female": 15,
        "total": 65

    },
    {
        "category": "Nushki",
        "male": 72,
        "female": 13,
        "refugee male": 25,
        "refugee female": 25,
        "total": 110

    },
    {
        "category": "Pishin",
        "male": 32,
        "female": 24,
        "refugee male": 34,
        "refugee female": 34,
        "total": 90

    },
    {
        "category": "Zhob",
        "male": 53,
        "female": 55,
        "refugee male": 22,
        "refugee female": 22,
        "total": 130

    },
    {
        "category": "Mastung",
        "male": 21,
        "female": 65,
        "refugee male": 44,
        "refugee female": 44,
        "total": 130

    },
    {
        "category": "Quetta",
        "male": 5,
        "female": 5,
        "refugee male": 9,
        "refugee female": 9,
        "total": 19

    }]


    var initializeData = (function () {

        var executed = false;
        console.log("one time")
        return function () {
            if (!executed) {
                executed = true;
                rerender(data)
            }
        };
    })();
    initializeData()

    function rerender(data){
        var newData = data
        am5.ready(function () {

            // Create root element
            // https://www.amcharts.com/docs/v5/getting-started/#Root_element
            root = am5.Root.new("chartdiv");


            // Set themes
            // https://www.amcharts.com/docs/v5/concepts/themes/
            root.setThemes([
                am5themes_Animated.new(root)
            ]);




            // Create chart
            // https://www.amcharts.com/docs/v5/charts/xy-chart/
            var chart = root.container.children.push(am5xy.XYChart.new(root, {
                panX: false,
                panY: false,
                wheelX: "panX",
                wheelY: "zoomX",
                layout: root.verticalLayout

            }));
            //chart.get("colors").set("colors", [
            //    am5.color(0x095256),
            //    am5.color(0x087f8c),
            //    am5.color(0x5aaa95),
            //    am5.color(0x86a873),
            //    am5.color(0xbb9f06)
            //]);
          

            // Create axes
            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
            var yRenderer = am5xy.AxisRendererY.new(root, {
                cellStartLocation: 0.1,
                cellEndLocation: 0.9
            });

            var yAxis = chart.yAxes.push(am5xy.CategoryAxis.new(root, {
                categoryField: "category",
                renderer: yRenderer,
                tooltip: am5.Tooltip.new(root, {})
            }));

            yRenderer.grid.template.setAll({
                location: 1
            })

            yAxis.data.setAll(data);

            var xAxis = chart.xAxes.push(am5xy.ValueAxis.new(root, {
                min: 0,
                renderer: am5xy.AxisRendererX.new(root, {
                    strokeOpacity: 0.1
                })
            }));

            // Add legend
            // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/
            var legend = chart.children.push(am5.Legend.new(root, {
                centerX: am5.p50,
                x: am5.p50
            }));



            // Add series
            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/
            function makeSeries(name, fieldName, stacked, hidden) {
                var series = chart.series.push(am5xy.ColumnSeries.new(root, {
                    stacked: stacked,
                    name: name,
                    xAxis: xAxis,
                    yAxis: yAxis,
                    valueXField: fieldName,
                    categoryYField: "category",
                    clickTarget: "none"
                    //legendLabelText: "Series: {name}",
                    //legendRangeLabelText: "Series: {name}"
                }));

                if (name.includes("Host Community")) {
                    console.log("Host Community")
                    series.columns.template.setAll({
                        tooltipText: "Female, {categoryY}:{valueX}",
                        width: am5.percent(90),
                        tooltipY: am5.percent(10)
                    });
                }
                else if (name.includes("Refugees")) {
                    console.log("Refugees")
                    series.columns.template.setAll({
                        tooltipText: "Refugee Female, {categoryY}:{valueX}",
                        width: am5.percent(90),
                        tooltipY: am5.percent(10)
                    });
                }
                else {
                    series.columns.template.setAll({
                        tooltipText: "{name}, {categoryY}:{valueX}",
                        width: am5.percent(90),
                        tooltipY: am5.percent(10)
                    });
                }


                series.data.setAll(newData);

                // Make stuff animate on load
                // https://www.amcharts.com/docs/v5/concepts/animations/
                // series.appear();

                series.bullets.push(function () {
                    return am5.Bullet.new(root, {
                        locationY: 0.5,
                        sprite: am5.Label.new(root, {
                            text: "{valueX}",
                            fill: root.interfaceColors.get("alternativeText"),
                            centerY: am5.percent(50),
                            centerX: am5.percent(50),
                            populateText: true
                        })
                    });
                });



                legend.itemContainers.template.events.on("click", function (item) {

                    console.log("item", item.target.uid)
                    // item: 100, 122, 144, 166
                    // series: 85, 107, 129, 151
                    var series1 = chart.series.getIndex(0);
                    var series2 = chart.series.getIndex(1);
                    var series3 = chart.series.getIndex(2);
                    var series4 = chart.series.getIndex(3);

                    var listInit = [100, 567, 1034, 1501, 1968]
                    var listTB = [122, 589, 1056, 1523, 1990]
                    var listLIP = [144, 611, 1078, 1545, 2012]
                    var listCBT = [166, 633, 1100, 1567, 2034]
                    var listEBP = [188, 655, 1122, 1589, 2056]

                    //var listInit = [100, 122, 144, 166, 188]
                    //var listTB = [567, 589, 611, 633, 655]
                    //var listLIP = [1034, 1056, 1078, 1100, 1122]
                    //var listCBT = [1501, 1523, 1545,1567, 1589]
                    //var listEBP = [1968, 1990, 2012, 2034, 2056]

                    console.log("Includes: ", listTB.includes(item.target.uid))

                    if (listInit.includes(item.target.uid)) {
                        if (series1.get("visible")) {
                            console.log("Visible")
                            //series1.hide();
                            series2.hide();
                        }
                        else {
                            console.log("Hidden", series1.isHidden())
                            if (series1.isHidden()) {
                                // series1.show();
                            }
                            series2.show()
                        }
                        //series1.show()

                        series3.hide()
                        series4.hide()
                    }

                    if (listTB.includes(item.target.uid)) {
                        if (series2.get("visible")) {
                            console.log("Visible")
                            //series1.hide();
                            series1.hide();
                        }
                        else {
                            console.log("Hidden", series2.isHidden())
                            if (series2.isHidden()) {
                                // series1.show();
                            }
                            series1.show()
                        }
                        //series1.show()

                        series3.hide()
                        series4.hide()
                    }

                    if (listLIP.includes(item.target.uid)) {
                        if (series3.get("visible")) {
                            console.log("Visible")
                            //series1.hide();
                            series4.hide();
                        }
                        else {
                            console.log("Hidden", series3.isHidden())
                            if (series3.isHidden()) {
                                // series1.show();
                            }
                            series4.show()
                        }
                        //series1.show()

                        series1.hide()
                        series2.hide()
                    }

                    if (listCBT.includes(item.target.uid)) {
                        if (series4.get("visible")) {
                            console.log("Visible")
                            //series1.hide();
                            series3.hide();
                        }
                        else {
                            console.log("Hidden", series4.isHidden())
                            if (series4.isHidden()) {
                                // series1.show();
                            }
                            series3.show()
                        }
                        //series1.show()

                        series1.hide()
                        series2.hide()
                    }

                });

                legend.data.push(series);


                allLegends = legend.allChildren()
                console.log(" All LEGEND: ", allLegends)
                allLegends[0].hide()
                if (allLegends[2]) {
                    allLegends[2].hide()
                }

                if (hidden) {
                    series.hide();
                }
                else {
                    series.appear();
                }
            }

            makeSeries("Male", "male", true, true);
            makeSeries("Host Community", "female", true, true)
            makeSeries("Refugee Male", "refugee male", true, true)
            makeSeries("Refugees", "refugee female", true, true)
            makeSeries("Total", "total", false, false)

            //makeSeries("Europe", "europe", false);
            //makeSeries("North America", "namerica", true);
            //makeSeries("Asia", "asia", false);
            //makeSeries("Latin America", "lamerica", true);
            //makeSeries("Middle East", "meast", true);
            //makeSeries("Africa", "africa", true);


            // Make stuff animate on load
            // https://www.amcharts.com/docs/v5/concepts/animations/
            chart.appear(1000, 100);

        }); // end am5.ready()


    }
   
    function clicked(e) {
        console.log("Clicked", e)

        data = [{
            "category": "Killa Abdullah",
            "male": 22,
            "female": 45,
            "refugee male": 13,
            "refugee female": 13,
            "total": 110


        }, {
            "category": "Killa Saifullah",
            "male": 25,
            "female": 45,
            "refugee male": 15,
            "refugee female": 15,
            "total": 85

        }, {
            "category": "Sherani",
            "male": 32,
            "female": 5,
            "refugee male": 13,
            "refugee female": 13,
            "total": 50

        }, {
            "category": "Chagai",
            "male": 15,
            "female": 35,
            "refugee male": 15,
            "refugee female": 15,
            "total": 65

        },
        {
            "category": "Nushki",
            "male": 72,
            "female": 13,
            "refugee male": 25,
            "refugee female": 25,
            "total": 110

        },
        {
            "category": "Pishin",
            "male": 32,
            "female": 24,
            "refugee male": 34,
            "refugee female": 34,
            "total": 90

        },
        {
            "category": "Zhob",
            "male": 53,
            "female": 55,
            "refugee male": 22,
            "refugee female": 22,
            "total": 130

        },
        {
            "category": "Mastung",
            "male": 21,
            "female": 65,
            "refugee male": 44,
            "refugee female": 44,
            "total": 130

        },
        {
            "category": "Quetta",
            "male": 5,
            "female": 5,
            "refugee male": 9,
            "refugee female": 9,
            "total": 19

        }]

        root.dispose();
        rerender(data)
        //columnStart(barData)
    }


</script>


<div class="container">
    <div class="row">
        <div class="col-md-2 " style="height:500px"></div>
        <div class="col-lg-2 ">
            <div class="card" style="width:100%; cursor: pointer;" onclick="clicked('tb')">
                <div class="card-body">
                    <h5 class="card-title">Total Beneficiaries</h5>
                    <p class="card-text">Numbers: 60000</p>
                    <p class="card-text">Percentage: 100%</p>
                    @*<a href="#" class="btn btn-primary">Go somewhere</a>*@
                </div>
            </div>
            <div class="card" style="width:100%; cursor: pointer;" onclick="clicked('lip')">
                <div class="card-body">
                    <h5 class="card-title">LIPs</h5>
                    <p class="card-text">Numbers: 2000</p>
                    <p class="card-text">Percentage: 100%</p>
                    @*<a href="#" class="btn btn-primary">Go somewhere</a>*@
                </div>
            </div>
            <div class="card" style="width:100%; cursor: pointer;" onclick="clicked('cbt')">
                <div class="card-body">
                    <h5 class="card-title">CBT</h5>
                    <p class="card-text">Numbers: 1000</p>
                    <p class="card-text">Percentage: 100%</p>
                    @*<a href="#" class="btn btn-primary">Go somewhere</a>*@
                </div>
            </div>
            <div class="card" style="width:100%; cursor: pointer;" onclick="clicked('ebp')">
                <div class="card-body">
                    <h5 class="card-title">EBP</h5>
                    <p class="card-text">Numbers: 500</p>
                    <p class="card-text">Percentage: 100%</p>
                    @*<a href="#" class="btn btn-primary">Go somewhere</a>*@
                </div>
            </div>
        </div>
        <div class="col-md-6 " id="chartdiv"></div>
        <div class="col-2 ">
            <div class="table-responsive-sm">
                <table class="table">
                    <tbody>
                        <tr>
                            <td>
                                <div style="height:20px; width:20px; border-radius:5px; background-color:#a367dc"></div>

                            </td>
                            <td>Total</td>

                        </tr>
                        <tr>
                            <td>
                                <div style="height:20px; width:20px; border-radius:5px; background-color:#67b7dc"></div>
                            </td>
                            <td>Host Male</td>

                        </tr>
                        <tr>
                            <td>
                                <div style="height:20px; width:20px; border-radius:5px; background-color:#6794dc"></div>
                            </td>
                            <td>Host Female</td>

                        </tr>
                        <tr>
                            <td>
                                <div style="height:20px; width:20px; border-radius:5px; background-color:#6771dc"></div>
                            </td>
                            <td>Refugee Male</td>

                        </tr>
                        <tr>
                            <td>
                                <div style="height:20px; width:20px; border-radius:5px; background-color:#866fdd"></div>
                            </td>
                            <td>Refugee Female</td>

                        </tr>
                    </tbody>

                </table>
            </div>
        </div>

    </div>

</div>
<!-- HTML -->